Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: DBT

; 
; --------------------------------------------------------------------------------
  TABLEVERSION 1
  
  TABLE #smmBusRelTable
    EnforceFKRelation 0
    PROPERTIES
      Name                #smmBusRelTable
      Label               #@SYS80068
      FormRef             #smmbusreltable
      SearchLinkRefName   #smmEPBusRelTableInfo
      TitleField1         #BusRelAccount
      TitleField2         #Party
      ConfigurationKey    #SmmCRM
      SecurityKey         #smmCRMTables
      CacheLookup         #Found
      CreateRecIdIndex    #Yes
      TableGroup          #Main
      PrimaryIndex        #AccountIdx
      ClusterIndex        #AccountIdx
      ModifiedDateTime    #Yes
      ModifiedBy          #Yes
      CreatedDateTime     #Yes
      CreatedBy           #Yes
      DeveloperDocumentation  #@SYS124724
      Origin              #{2C0E1FD8-0000-1000-D7C8-8D76E0A8D074}
      LegacyId            #8152
    ENDPROPERTIES
    
    FIELDS
      FIELD #Blocked
        ENUM
        PROPERTIES
          Name                #Blocked
          Table               #smmBusRelTable
          Origin              #{4C39A9DF-B403-488F-BB4A-C1FB94355CC3}
          LegacyId            #1
          ExtendedDataType    #smmRelationBlocked
          EnumType            #CustVendorBlocked
        ENDPROPERTIES
        
      FIELD #BusRelAccount
        STRING
        PROPERTIES
          Name                #BusRelAccount
          Mandatory           #Yes
          AllowEdit           #No
          Table               #smmBusRelTable
          Origin              #{14A3F9EB-1641-4D43-AF08-D0D001B8E177}
          LegacyId            #8009
          ExtendedDataType    #smmBusRelAccount
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #BusRelTypeId
        STRING
        PROPERTIES
          Name                #BusRelTypeId
          Label               #@SYS82087
          HelpText            #@SYS323273
          Mandatory           #Yes
          Table               #smmBusRelTable
          Origin              #{E0019F2C-D6AF-463C-8A20-3D7D451CBDE9}
          LegacyId            #8032
          ExtendedDataType    #smmBusRelTypeId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CompanyChain
        STRING
        PROPERTIES
          Name                #CompanyChain
          Label               #@SYS318283
          Table               #smmBusRelTable
          Origin              #{A684D591-FB54-4278-9A9E-C0F298EB51D8}
          LegacyId            #8031
          ExtendedDataType    #smmChainId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #CompanyIdSiret
        STRING
        PROPERTIES
          Name                #CompanyIdSiret
          Table               #smmBusRelTable
          Origin              #{4D7F2639-5155-4E9C-9EDB-0A27C1A76681}
          LegacyId            #8
          ExtendedDataType    #CompanyIdSiret
          StringSize          #14
        ENDPROPERTIES
        
      FIELD #CompanyNAFCode
        INT64
        PROPERTIES
          Name                #CompanyNAFCode
          Table               #smmBusRelTable
          Origin              #{6F78BBCC-CA97-47CB-97A0-ABC4265F41B9}
          LegacyId            #30
          ExtendedDataType    #CompanyNAFRecId
        ENDPROPERTIES
        
      FIELD #CreditMax
        REAL
        PROPERTIES
          Name                #CreditMax
          Table               #smmBusRelTable
          Origin              #{C1DF41E4-0297-4B02-B782-1A937881AB38}
          LegacyId            #4
          ExtendedDataType    #smmCreditMaxMST
        ENDPROPERTIES
        
      FIELD #CreditRating
        STRING
        PROPERTIES
          Name                #CreditRating
          Table               #smmBusRelTable
          Origin              #{CB7D1738-1A3C-4F4E-9FE0-391840598EAB}
          LegacyId            #5
          ExtendedDataType    #smmCreditRating
        ENDPROPERTIES
        
      FIELD #Currency
        STRING
        PROPERTIES
          Name                #Currency
          HelpText            #@SYS82099
          Mandatory           #Yes
          Table               #smmBusRelTable
          Origin              #{04EA0B42-74CC-4FAD-8B9A-48F8929490B2}
          LegacyId            #8059
          ExtendedDataType    #CurrencyCode
          StringSize          #3
        ENDPROPERTIES
        
      FIELD #CustGroup
        STRING
        PROPERTIES
          Name                #CustGroup
          HelpText            #@SYS318298
          Table               #smmBusRelTable
          Origin              #{16869A6B-9D01-4201-ADAB-A8FFF90D204B}
          LegacyId            #8060
          ExtendedDataType    #CustGroupId
        ENDPROPERTIES
        
      FIELD #DefaultDimension
        INT64
        PROPERTIES
          Name                #DefaultDimension
          Table               #smmBusRelTable
          Origin              #{82EED0F3-E5F1-4D8F-A699-1CEDEC3A89F5}
          LegacyId            #29
          ExtendedDataType    #DimensionDefault
        ENDPROPERTIES
        
      FIELD #DestinationCodeId
        STRING
        PROPERTIES
          Name                #DestinationCodeId
          Table               #smmBusRelTable
          Origin              #{EBB07327-106C-454C-A924-EB588B853E6B}
          LegacyId            #12
          ExtendedDataType    #smmDestinationCodeId
        ENDPROPERTIES
        
      FIELD #DirectMail
        ENUM
        PROPERTIES
          Name                #DirectMail
          Table               #smmBusRelTable
          Origin              #{40404CE4-6A4E-45EA-83F2-47792CDFF01C}
          LegacyId            #8016
          ExtendedDataType    #smmBusRelDirectMail
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #DlvMode
        STRING
        PROPERTIES
          Name                #DlvMode
          HelpText            #@SYS318308
          Table               #smmBusRelTable
          Origin              #{CDDA4AB6-44F1-480D-B628-72892040C720}
          LegacyId            #10
          ExtendedDataType    #smmDlvModeId
        ENDPROPERTIES
        
      FIELD #DlvTerm
        STRING
        PROPERTIES
          Name                #DlvTerm
          HelpText            #@SYS318307
          Table               #smmBusRelTable
          Origin              #{5F4CC7F4-8CDA-49B4-BB67-D0EA3268FD67}
          LegacyId            #7
          ExtendedDataType    #smmDlvTermId
        ENDPROPERTIES
        
      FIELD #FiscalCode
        STRING
        PROPERTIES
          Name                #FiscalCode
          HelpText            #@SYS318305
          Table               #smmBusRelTable
          Origin              #{7F97AB5C-E84B-44C5-92E8-342177ED3D19}
          LegacyId            #24
          ExtendedDataType    #FiscalCode
          StringSize          #16
        ENDPROPERTIES
        
      FIELD #FreightZone
        STRING
        PROPERTIES
          Name                #FreightZone
          Table               #smmBusRelTable
          Origin              #{73F5086E-7F86-43C4-8076-9A6071246609}
          LegacyId            #11
          ExtendedDataType    #smmFreightZoneId
        ENDPROPERTIES
        
      FIELD #Imported
        ENUM
        PROPERTIES
          Name                #Imported
          HelpText            #@SYS318289
          Table               #smmBusRelTable
          Origin              #{163D1A59-57C3-4AA9-AA19-D68D385CC719}
          LegacyId            #8040
          ExtendedDataType    #smmImported
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #InclTax
        ENUM
        PROPERTIES
          Name                #InclTax
          HelpText            #@SYS318302
          Table               #smmBusRelTable
          Origin              #{C1C0E512-8D8E-40D2-B1CC-2D001DD1C3B8}
          LegacyId            #15
          ExtendedDataType    #InclTax
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #LineOfBusinessId
        STRING
        PROPERTIES
          Name                #LineOfBusinessId
          HelpText            #@SYS82097
          Table               #smmBusRelTable
          Origin              #{733F1591-7518-4E1F-9B97-767EC41505B8}
          LegacyId            #8054
          ExtendedDataType    #LineOfBusinessId
        ENDPROPERTIES
        
      FIELD #MainContactWorker
        INT64
        PROPERTIES
          Name                #MainContactWorker
          Table               #smmBusRelTable
          Origin              #{DE6AC96A-6E47-4C22-A1E0-6C421F3CB15C}
          LegacyId            #31
          ExtendedDataType    #smmBusRelAccResponsibleWorker
        ENDPROPERTIES
        
      FIELD #MandatoryCreditLimit
        ENUM
        PROPERTIES
          Name                #MandatoryCreditLimit
          HelpText            #@SYS318295
          Table               #smmBusRelTable
          Origin              #{63888059-2B0A-43A0-B93E-F1F399963625}
          LegacyId            #6
          ExtendedDataType    #MandatoryCreditLimit
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #MCRPackedExtensions
        QUEUE
        PROPERTIES
          Name                #MCRPackedExtensions
          SaveContents        #No
          Visible             #No
          Table               #smmBusRelTable
          Origin              #{F5F9578A-9244-4CF6-9CDE-BFC6014E5C9C}
          ExtendedDataType    #SysExtensionSerializerPackedContainer
        ENDPROPERTIES
        
      FIELD #Memo
        STRING
        PROPERTIES
          Name                #Memo
          Table               #smmBusRelTable
          Origin              #{CD50DB97-3545-4E54-B730-BE0F8E421588}
          LegacyId            #8017
          ExtendedDataType    #smmBusRelMemo
          StringSize          #(Memo)
        ENDPROPERTIES
        
      FIELD #OneTimeRelation
        ENUM
        PROPERTIES
          Name                #OneTimeRelation
          AllowEditOnCreate   #No
          AllowEdit           #No
          Table               #smmBusRelTable
          Origin              #{5F9FC70B-DE99-4D9F-813C-9F0D89A0788D}
          LegacyId            #3
          ExtendedDataType    #smmOneTimeRelation
          EnumType            #NoYes
        ENDPROPERTIES
        
      FIELD #OpenFromTime
        TIME
        PROPERTIES
          Name                #OpenFromTime
          HelpText            #@SYS323274
          Table               #smmBusRelTable
          Origin              #{ECEFA630-F932-4F00-9EF2-3EC2C6DB2783}
          LegacyId            #8038
          ExtendedDataType    #smmBusRelOpenFromTime
        ENDPROPERTIES
        
      FIELD #OpenToTime
        TIME
        PROPERTIES
          Name                #OpenToTime
          HelpText            #@SYS323275
          Table               #smmBusRelTable
          Origin              #{1EA1CEA3-62ED-401B-A438-0A202A9746DC}
          LegacyId            #8037
          ExtendedDataType    #smmBusRelOpenToTime
        ENDPROPERTIES
        
      FIELD #Party
        INT64
        PROPERTIES
          Name                #Party
          Table               #smmBusRelTable
          Origin              #{5E573E11-A1AE-4C62-8D74-70A46DBBD41C}
          LegacyId            #27
          ExtendedDataType    #DirPartyRecId
        ENDPROPERTIES
        
      FIELD #SalesCalendarId
        STRING
        PROPERTIES
          Name                #SalesCalendarId
          HelpText            #@SYS318311
          Table               #smmBusRelTable
          Origin              #{59B30D16-EF69-45DD-8506-2AA0897FF891}
          LegacyId            #22
          ExtendedDataType    #SalesCalendarId
        ENDPROPERTIES
        
      FIELD #SalesDistrict
        STRING
        PROPERTIES
          Name                #SalesDistrict
          HelpText            #@SYS81382
          Table               #smmBusRelTable
          Origin              #{C18DFD70-3EC9-4628-B6CE-BE3258D91E53}
          LegacyId            #8004
          ExtendedDataType    #smmSalesDistrictId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Segment
        STRING
        PROPERTIES
          Name                #Segment
          Table               #smmBusRelTable
          Origin              #{A6976FA2-809D-4716-AB40-CC2881445214}
          LegacyId            #8006
          ExtendedDataType    #smmSegmentId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Status
        STRING
        PROPERTIES
          Name                #Status
          HelpText            #@SYS318282
          Table               #smmBusRelTable
          Origin              #{509B8B78-1687-4DDB-A1CD-693F51F8DAB0}
          LegacyId            #8007
          ExtendedDataType    #smmStatusId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #Subsegment
        STRING
        PROPERTIES
          Name                #Subsegment
          Table               #smmBusRelTable
          Origin              #{36A1B5AE-05CD-4569-B9EE-A64D1D3D8F1A}
          LegacyId            #8012
          ExtendedDataType    #smmSubsegmentId
          StringSize          #20
        ENDPROPERTIES
        
      FIELD #TaxGroup
        STRING
        PROPERTIES
          Name                #TaxGroup
          Label               #@SYS318303
          HelpText            #@SYS318304
          Table               #smmBusRelTable
          Origin              #{C0F27701-289B-4E50-AD63-2C329F4BFC62}
          LegacyId            #2
          ExtendedDataType    #TaxGroup
        ENDPROPERTIES
        
      FIELD #VendGroup
        STRING
        PROPERTIES
          Name                #VendGroup
          HelpText            #@SYS318300
          Table               #smmBusRelTable
          Origin              #{34A7B2F5-2B86-4187-A15A-AF4A7B3C2378}
          LegacyId            #8061
          ExtendedDataType    #VendGroupId
        ENDPROPERTIES
        
    ENDFIELDS
    GROUPS
      GROUP #AutoSummary
        PROPERTIES
          Name                #AutoSummary
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxGroup
          #CreditMax
          #CreditRating
          #MandatoryCreditLimit
          #DlvMode
          #FreightZone
          #SalesCalendarId
          #SalesDistrict
          #Segment
          #Status
          #Subsegment
          #CompanyChain
          #BusRelTypeId
          #LineOfBusinessId
          #Currency
          #CustGroup
          #VendGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoReport
        PROPERTIES
          Name                #AutoReport
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelAccount
          #Party
          #Status
          #SalesDistrict
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AutoLookup
        PROPERTIES
          Name                #AutoLookup
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelAccount
          #Party
          #name
          #BusRelTypeId
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #AddressLookup
        PROPERTIES
          Name                #AddressLookup
          Label               #@SYS88672
        ENDPROPERTIES
        
        GROUPFIELDS
          #Party
          #BusRelAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Administration
        PROPERTIES
          Name                #Administration
          Label               #@SYS9853
        ENDPROPERTIES
        
        GROUPFIELDS
          #Blocked
          #OneTimeRelation
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BusinessRelation
        PROPERTIES
          Name                #BusinessRelation
          Label               #@SYS80138
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #BusinessRelationInformation
        PROPERTIES
          Name                #BusinessRelationInformation
          Label               #@SYS80508
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
          #Party
          #BusRelAccount
          #Status
          #CompanyChain
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Contact
        PROPERTIES
          Name                #Contact
          Label               #@SYS60248
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineOfBusinessId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Credit
        PROPERTIES
          Name                #Credit
          Label               #@SYS7084
        ENDPROPERTIES
        
        GROUPFIELDS
          #MandatoryCreditLimit
          #CreditRating
          #CreditMax
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Currency
        PROPERTIES
          Name                #Currency
          Label               #@SYS7572
        ENDPROPERTIES
        
        GROUPFIELDS
          #Currency
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Delivery
        PROPERTIES
          Name                #Delivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #FreightZone
          #DlvTerm
          #DlvMode
          #DestinationCodeId
          #SalesCalendarId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Dimension
        PROPERTIES
          Name                #Dimension
          Label               #@SYS14926
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #DirectMail
        PROPERTIES
          Name                #DirectMail
          Label               #@SYS81334
        ENDPROPERTIES
        
        GROUPFIELDS
          #DirectMail
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPContactBasic
        PROPERTIES
          Name                #EPContactBasic
          Label               #@SYS60248
        ENDPROPERTIES
        
        GROUPFIELDS
          #LineOfBusinessId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPContactNAF
        PROPERTIES
          Name                #EPContactNAF
          Label               #@SYS60248
        ENDPROPERTIES
        
        GROUPFIELDS
          #CompanyIdSiret
          #CompanyNAFCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPGeneralCharacteristics
        PROPERTIES
          Name                #EPGeneralCharacteristics
          Label               #@SYS112249
        ENDPROPERTIES
        
        GROUPFIELDS
          #CompanyChain
          #SalesDistrict
          #OpenToTime
          #OpenFromTime
          #Currency
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPGeneralClassification
        PROPERTIES
          Name                #EPGeneralClassification
          Label               #@SYS26267
        ENDPROPERTIES
        
        GROUPFIELDS
          #Segment
          #Subsegment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPGeneralCredit
        PROPERTIES
          Name                #EPGeneralCredit
          Label               #@SYS7084
        ENDPROPERTIES
        
        GROUPFIELDS
          #MandatoryCreditLimit
          #CreditRating
          #CreditMax
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPGeneralIdentification
        PROPERTIES
          Name                #EPGeneralIdentification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
          #Status
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPIdentification
        PROPERTIES
          Name                #EPIdentification
          Label               #@SYS53631
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPMainResponsible
        PROPERTIES
          Name                #EPMainResponsible
          Label               #@SYS67464
        ENDPROPERTIES
        
        GROUPFIELDS
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPMiniPage
        PROPERTIES
          Name                #EPMiniPage
          Label               #@SYS108232
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
          #SalesDistrict
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPSetupDelivery
        PROPERTIES
          Name                #EPSetupDelivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #FreightZone
          #DlvTerm
          #DlvMode
          #DestinationCodeId
          #SalesCalendarId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPSetupMemo
        PROPERTIES
          Name                #EPSetupMemo
          Label               #@SYS80402
        ENDPROPERTIES
        
        GROUPFIELDS
          #Memo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPSetupTax
        PROPERTIES
          Name                #EPSetupTax
          Label               #@SYS28668
        ENDPROPERTIES
        
        GROUPFIELDS
          #TaxGroup
          #InclTax
          #FiscalCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #EPStatusType
        PROPERTIES
          Name                #EPStatusType
          Label               #@SYS15042
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
          #Status
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Group
        PROPERTIES
          Name                #Group
          Label               #@SYS3815
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustGroup
          #VendGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #HoursOfBusiness
        PROPERTIES
          Name                #HoursOfBusiness
          Label               #@SYS79895
        ENDPROPERTIES
        
        GROUPFIELDS
          #OpenFromTime
          #OpenToTime
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Identification
        PROPERTIES
          Name                #Identification
          Label               #@SYS5711
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelAccount
          #Party
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Log
        PROPERTIES
          Name                #Log
          Label               #@SYS2515
        ENDPROPERTIES
        
        GROUPFIELDS
          #Imported
          #createdDateTime
          #modifiedDateTime
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Memo
        PROPERTIES
          Name                #Memo
          Label               #@SYS80402
        ENDPROPERTIES
        
        GROUPFIELDS
          #Memo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OtherInfo
        PROPERTIES
          Name                #OtherInfo
          Label               #@SYS114375
        ENDPROPERTIES
        
        GROUPFIELDS
          #Segment
          #Subsegment
          #LineOfBusinessId
          #CompanyChain
          #SalesDistrict
          #Currency
          #Memo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Overview
        PROPERTIES
          Name                #Overview
          Label               #@SYS80404
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelAccount
          #CompanyChain
          #BusRelTypeId
          #Imported
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewDimensions
        PROPERTIES
          Name                #OverviewDimensions
          Label               #@SYS102674
        ENDPROPERTIES
        
        GROUPFIELDS
          #DefaultDimension
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewGeneralCharacteristics
        PROPERTIES
          Name                #OverviewGeneralCharacteristics
          Label               #@SYS112249
        ENDPROPERTIES
        
        GROUPFIELDS
          #CompanyChain
          #SalesDistrict
          #showStartTime
          #showEndTime
          #Currency
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewGeneralClassification
        PROPERTIES
          Name                #OverviewGeneralClassification
          Label               #@SYS26267
        ENDPROPERTIES
        
        GROUPFIELDS
          #Segment
          #Subsegment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewGeneralCredit
        PROPERTIES
          Name                #OverviewGeneralCredit
          Label               #@SYS7084
        ENDPROPERTIES
        
        GROUPFIELDS
          #MandatoryCreditLimit
          #CreditRating
          #CreditMax
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewSetupDelivery
        PROPERTIES
          Name                #OverviewSetupDelivery
          Label               #@SYS4508
        ENDPROPERTIES
        
        GROUPFIELDS
          #FreightZone
          #DlvTerm
          #DlvMode
          #DestinationCodeId
          #SalesCalendarId
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewSetupMemo
        PROPERTIES
          Name                #OverviewSetupMemo
          Label               #@SYS80402
        ENDPROPERTIES
        
        GROUPFIELDS
          #Memo
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #OverviewSetupTax
        PROPERTIES
          Name                #OverviewSetupTax
          Label               #@SYS28668
        ENDPROPERTIES
        
        GROUPFIELDS
          #InclTax
          #TaxGroup
          #FiscalCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Posting
        PROPERTIES
          Name                #Posting
          Label               #@SYS3815
        ENDPROPERTIES
        
        GROUPFIELDS
          #CustGroup
          #VendGroup
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #quickCreateDetails
        PROPERTIES
          Name                #quickCreateDetails
          Label               #@SYS340108
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
          #Currency
          #DlvTerm
          #DlvMode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #quickCreateHeader
        PROPERTIES
          Name                #quickCreateHeader
          Label               #@SYS340399
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelAccount
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #smmOpportunityEditProspectDetails
        PROPERTIES
          Name                #smmOpportunityEditProspectDetails
          Label               #@SYS110468
        ENDPROPERTIES
        
        GROUPFIELDS
          #customerGroup
          #Currency
          #Segment
          #Subsegment
          #SalesDistrict
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #smmProspectListMoreInfo
        PROPERTIES
          Name                #smmProspectListMoreInfo
          Label               #@SYS110470
        ENDPROPERTIES
        
        GROUPFIELDS
          #mainContactName
          #CompanyChain
          #SalesDistrict
          #hoursOfBusiness
          #Currency
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #SMSProfile
        PROPERTIES
          Name                #SMSProfile
          Label               #@SYS100101
        ENDPROPERTIES
        
        GROUPFIELDS
          #DirectMail
          #Status
          #SalesDistrict
          #Segment
          #Subsegment
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Status
        PROPERTIES
          Name                #Status
          Label               #@SYS80398
        ENDPROPERTIES
        
        GROUPFIELDS
          #Status
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #Tax
        PROPERTIES
          Name                #Tax
          Label               #@SYS28668
        ENDPROPERTIES
        
        GROUPFIELDS
          #InclTax
          #TaxGroup
          #FiscalCode
        ENDGROUPFIELDS
      ENDGROUP
      GROUP #WebCategoryBrowsing
        PROPERTIES
          Name                #WebCategoryBrowsing
          Label               #@SYS74258
        ENDPROPERTIES
        
        GROUPFIELDS
          #BusRelTypeId
          #Status
          #MainContactWorker
        ENDGROUPFIELDS
      ENDGROUP
    ENDGROUPS
    
    INDICES
      #Party
      PROPERTIES
        Name                #Party
        AllowDuplicates     #No
        AlternateKey        #Yes
        Origin              #{2B050005-1FD8-1000-5061-727479000000}
        LegacyId            #5
      ENDPROPERTIES
      
      INDEXFIELDS
        #Party
      ENDINDEXFIELDS
      
      #DefaultDimensionIdx
      PROPERTIES
        Name                #DefaultDimensionIdx
        Origin              #{2B130006-1FD8-1000-0AA1-BDDD852145E3}
        LegacyId            #6
      ENDPROPERTIES
      
      INDEXFIELDS
        #DefaultDimension
      ENDINDEXFIELDS
      
      #CompanyNAFCodeIdx
      PROPERTIES
        Name                #CompanyNAFCodeIdx
        Origin              #{2B110007-1FD8-1000-C613-4C6CEC6CA910}
        LegacyId            #7
      ENDPROPERTIES
      
      INDEXFIELDS
        #CompanyNAFCode
      ENDINDEXFIELDS
      
      #AccountIdx
      PROPERTIES
        Name                #AccountIdx
        AllowDuplicates     #No
        Origin              #{2B0A1F41-1FD8-1000-CD51-C781756E7449}
        LegacyId            #8001
      ENDPROPERTIES
      
      INDEXFIELDS
        #BusRelAccount
      ENDINDEXFIELDS
      
      #SalesManagementIdx
      PROPERTIES
        Name                #SalesManagementIdx
        Origin              #{2B121F46-1FD8-1000-1AFE-4174D0657AEA}
        LegacyId            #8006
      ENDPROPERTIES
      
      INDEXFIELDS
        #MainContactWorker
      ENDINDEXFIELDS
      
      #BusRelTypeIdx
      PROPERTIES
        Name                #BusRelTypeIdx
        Origin              #{2B0D1F47-1FD8-1000-1238-A5145FD06679}
        LegacyId            #8007
      ENDPROPERTIES
      
      INDEXFIELDS
        #BusRelTypeId
      ENDINDEXFIELDS
      
    ENDINDICES
    FULLTEXTINDICES
    ENDFULLTEXTINDICES
    REFERENCES
      REFERENCE #CompanyNAFCode
        PROPERTIES
          Name                #CompanyNAFCode
          Table               #CompanyNAFCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CompanyNAFCode
          Role                #CompanyNAFCode_smmBusRelTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CompanyNAFCode
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #Currency
        PROPERTIES
          Name                #Currency
          Table               #Currency
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #Currency
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Currency
            RelatedField        #CurrencyCode
            SourceEDT           #CurrencyCode
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustGroup
        PROPERTIES
          Name                #CustGroup
          Table               #CustGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #CustGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CustGroup
            RelatedField        #CustGroup
            SourceEDT           #CustGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #CustTable
        PROPERTIES
          Name                #CustTable
          Table               #CustTable
          Validate            #No
          EntityRelationshipRole  #@SYS123523
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          RelatedTableRole    #IsCustOf
          Role                #IsBusRelFor
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Party
            RelatedField        #Party
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DefaultDimension
        PROPERTIES
          Name                #DefaultDimension
          Table               #DimensionAttributeValueSet
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DimensionAttributeValueSet
          Role                #DimensionAttributeValueSet_smmBusRelTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DefaultDimension
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DestinationCode
        PROPERTIES
          Name                #DestinationCode
          Table               #DestinationCode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DestinationCode
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DestinationCodeId
            RelatedField        #DestinationCodeId
            SourceEDT           #smmDestinationCodeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DirAddressBookParty
        PROPERTIES
          Name                #DirAddressBookParty
          Table               #DirAddressBookPartyAllView
          Validate            #No
          RelationshipType    #Link
          UseDefaultRoleNames #Yes
          RelatedTableRole    #DirAddressBookPartyAllView
          Role                #smmBusRelTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Party
            RelatedField        #Party
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DirPartyTable_FK
        PROPERTIES
          Name                #DirPartyTable_FK
          Table               #DirPartyTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          RelatedTableRole    #DirPartyTable
          Role                #DirPartyTable_smmBusRelTable
          CreateNavigationPropertyMethods           #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Party
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DirPartyView
        PROPERTIES
          Name                #DirPartyView
          Table               #DirPartyView
          Validate            #No
          EntityRelationshipRole  #@SYS124637
          RelationshipType    #Link
          RelatedTableRole    #isPartyViewOf
          Role                #IsBusRelFor
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Party
            RelatedField        #Party
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DlvMode
        PROPERTIES
          Name                #DlvMode
          Table               #DlvMode
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DlvMode
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DlvMode
            RelatedField        #Code
            SourceEDT           #smmDlvModeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #DlvTerm
        PROPERTIES
          Name                #DlvTerm
          Table               #DlvTerm
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #DlvTerm
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #DlvTerm
            RelatedField        #Code
            SourceEDT           #smmDlvTermId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #LineOfBusiness
        PROPERTIES
          Name                #LineOfBusiness
          Table               #LineOfBusiness
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #LineOfBusiness
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #LineOfBusinessId
            RelatedField        #LineOfBusinessId
            SourceEDT           #LineOfBusinessId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #MainContactWorker
        PROPERTIES
          Name                #MainContactWorker
          Table               #HcmWorker
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #HcmWorker
          Role                #HcmWorker_smmBusRelTable
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #MainContactWorker
            RelatedField        #RecId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmBusRelChainGroup
        PROPERTIES
          Name                #smmBusRelChainGroup
          Table               #smmBusRelChainGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #smmBusRelChainGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #CompanyChain
            RelatedField        #ChainId
            SourceEDT           #smmChainId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmBusRelSalesDistrictGroup
        PROPERTIES
          Name                #smmBusRelSalesDistrictGroup
          Table               #smmBusRelSalesDistrictGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #smmBusRelSalesDistrictGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SalesDistrict
            RelatedField        #SalesDistrictId
            SourceEDT           #smmSalesDistrictId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmBusRelSegmentGroup
        PROPERTIES
          Name                #smmBusRelSegmentGroup
          Table               #smmBusRelSegmentGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #smmBusRelSegmentGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Segment
            RelatedField        #SegmentId
            SourceEDT           #smmSegmentId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmBusRelStatusGroup
        PROPERTIES
          Name                #smmBusRelStatusGroup
          Table               #smmBusRelStatusGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #smmBusRelStatusGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #Status
            RelatedField        #StatusId
            SourceEDT           #smmStatusId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmBusRelSubSegmentGroup
        PROPERTIES
          Name                #smmBusRelSubSegmentGroup
          Table               #smmBusRelSubSegmentGroup
          EntityRelationshipRole  #@SYS124723
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #IsBusRelSegmentOf
          Role                #IsBusRelFor
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Segment
            RelatedField        #SegmentId
          ENDPROPERTIES
          
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Subsegment
            RelatedField        #SubsegmentId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #smmBusRelTypeGroup
        PROPERTIES
          Name                #smmBusRelTypeGroup
          Table               #smmBusRelTypeGroup
          RelatedTableCardinality   #ExactlyOne
          Cardinality         #ZeroMore
          RelationshipType    #Aggregation
          RelatedTableRole    #smmBusRelTypeGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #BusRelTypeId
            RelatedField        #TypeId
            SourceEDT           #smmBusRelTypeId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #TaxGroupHeading
        PROPERTIES
          Name                #TaxGroupHeading
          Table               #TaxGroupHeading
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #TaxGroupHeading
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #TaxGroup
            RelatedField        #TaxGroup
            SourceEDT           #TaxGroup
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendGroup
        PROPERTIES
          Name                #VendGroup
          Table               #VendGroup
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #VendGroup
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #VendGroup
            RelatedField        #VendGroup
            SourceEDT           #VendGroupId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #VendTable
        PROPERTIES
          Name                #VendTable
          Table               #VendTable
          Validate            #No
          EntityRelationshipRole  #@SYS123524
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroOne
          RelationshipType    #Association
          RelatedTableRole    #IsVendOf
          Role                #IsBusRelFor
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE NORMAL
          PROPERTIES
            Field               #Party
            RelatedField        #Party
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
      REFERENCE #WorkCalendarTable
        PROPERTIES
          Name                #WorkCalendarTable
          Table               #WorkCalendarTable
          RelatedTableCardinality   #ZeroOne
          Cardinality         #ZeroMore
          RelationshipType    #Association
          RelatedTableRole    #WorkCalendarTable
          Role                #smmBusRelTable
          EDTRelation         #Yes
        ENDPROPERTIES
        
        FIELDREFERENCES
          REFERENCETYPE PKFK
          PROPERTIES
            Field               #SalesCalendarId
            RelatedField        #CalendarId
            SourceEDT           #SalesCalendarId
          ENDPROPERTIES
          
        ENDFIELDREFERENCES
      ENDREFERENCE
    ENDREFERENCES
    
    DELETEACTIONS
      #MCRsmmBusRelTable(smmBusRelTable)
      PROPERTIES
        Table               #MCRsmmBusRelTable
        DeleteAction        #Cascade
        Relation            #smmBusRelTable
      ENDPROPERTIES
      
      #MCRCustTableIndex(smmBusRelTable)
      PROPERTIES
        Table               #MCRCustTableIndex
        DeleteAction        #Cascade
        Relation            #smmBusRelTable
      ENDPROPERTIES
      
      #MCRCatalogRequest(smmBusRelAccount)
      PROPERTIES
        Table               #MCRCatalogRequest
        DeleteAction        #Cascade
        Relation            #smmBusRelAccount
      ENDPROPERTIES
      
      #smmCampaignSelection
      PROPERTIES
        Table               #smmCampaignSelection
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #DocuRef
      PROPERTIES
        Table               #DocuRef
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #MCRTargetList
      PROPERTIES
        Table               #MCRTargetList
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #SalesQuotationTable
      PROPERTIES
        Table               #SalesQuotationTable
        DeleteAction        #Restricted
      ENDPROPERTIES
      
      #smmActivityParentLinkTable
      PROPERTIES
        Table               #smmActivityParentLinkTable
        DeleteAction        #Cascade + Restricted
      ENDPROPERTIES
      
      #smmBusRelDefaultLocation
      PROPERTIES
        Table               #smmBusRelDefaultLocation
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #smmBusRelSectorTable
      PROPERTIES
        Table               #smmBusRelSectorTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #smmConvertedBusRel
      PROPERTIES
        Table               #smmConvertedBusRel
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #smmNoteItTable
      PROPERTIES
        Table               #smmNoteItTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #smmResponsibilitiesEmplTable
      PROPERTIES
        Table               #smmResponsibilitiesEmplTable
        DeleteAction        #Cascade
      ENDPROPERTIES
      
      #smmBusRelRevenue(smmBusRelTable)
      PROPERTIES
        Table               #smmBusRelRevenue
        DeleteAction        #Cascade
        Relation            #smmBusRelTable
      ENDPROPERTIES
      
    ENDDELETEACTIONS
    
    METHODS
      SOURCE #abc
        #//BP deviation documented
        #display ABC abc()
        #{
        #    return DirOrganization::find(this.Party).abc;
        #}
      ENDSOURCE
      SOURCE #canConvertToCustomer
        #// Check if a prospect can be converted to customer or not
        #public boolean canConvertToCustomer()
        #{
        #    // Check license
        #    if (!smmLicense::custTableInsert())
        #    {
        #        // Not allowed to store data in Customer table
        #        return checkFailed("@SYS80669");
        #    }
        #
        #    // Check for customer group on the business relation
        #    if (!this.CustGroup)
        #    {
        #        // Field '%1' must be filled in.
        #        return checkFailed(strFmt("@SYS26332", fieldPName(smmBusRelTable, CustGroup)));
        #    }
        #
        #    if (DirPartyTable::isCustomer(this.Party))
        #    {
        #        // The business relation cannot be converted to a customer
        #        return checkFailed("@SYS108838");
        #
        #    }
        #
        #    if (CustParameters::find().MandatoryTaxGroup && !this.TaxGroup)
        #    {
        #        // Field '%1' must be filled in.
        #        return checkFailed(strFmt("@SYS26332", fieldPName(smmBusRelTable, TaxGroup)));
        #    }
        #
        #    return true;
        #}
      ENDSOURCE
      SOURCE #canConvertToVendor
        #// Check if a prospect can be converted to vendor or not
        #public boolean canConvertToVendor()
        #{
        #    SalesQuotationTable salesQuotationTable;
        #
        #    // Check license
        #    if (!smmLicense::vendTableInsert())
        #    {
        #        // Insufficient rights
        #        return checkFailed("@SYS57330");
        #    }
        #
        #    // Check for vendor group on the business relation
        #    if (!this.VendGroup)
        #    {
        #        // Field '%1' must be filled in.
        #        return checkFailed(strFmt("@SYS26332", fieldPName(smmBusRelTable, VendGroup)));
        #    }
        #    if (DirPartyTable::isvendor(this.Party))
        #    {
        #        // The business relation cannot be converted to a vendor
        #        return checkFailed("@SYS81994");
        #    }
        #
        #    select firstonly salesQuotationTable where salesQuotationTable.BusRelAccount == this.BusRelAccount;
        #
        #    if (salesQuotationTable)
        #    {
        #        // Cannot convert to vendor as quotations exist for the prospect.
        #        return checkFailed("@SYS108811");
        #    }
        #
        #    if (VendParameters::find().MandatoryTaxGroup && !this.TaxGroup)
        #    {
        #        //Field '%1' must be filled in.
        #        return checkFailed(strFmt("@SYS26332", fieldPName(smmBusRelTable, TaxGroup)));
        #    }
        #    return true;
        #}
      ENDSOURCE
      SOURCE #canCreateSalesQuotation
        #/// <summary>
        #/// Determines whether a sales quotation can be created for the business relation.
        #/// </summary>
        #/// <returns>
        #/// true if a sales quotation can be created for the business relation; otherwise, false.
        #/// </returns>
        #boolean canCreateSalesQuotation()
        #{;
        #    return smmBusRelTypeGroup::find(this.BusRelTypeId).TableType == smmBusRelTypeSourceTable::Relation;
        #}
      ENDSOURCE
      SOURCE #convertActivities
        #// Update activity references
        #private server void convertActivities(TableId _tableId, RecId _recId, TableId _newTableId, RecId _newRecId)
        #{
        #    #OCCRetryCount
        #    smmActivityParentLinkTable smmActivityParentLinkTable;
        #    smmActivityParentType      parentType;
        #    smmActivities              smmActivities;
        #    ;
        #    parentType = conPeek(smmActivityParentLink::refTableId2ParentTypes(_newTableId),1);
        #    try
        #    {
        #        ttsbegin;
        #
        #        // Run through all the smmActivityParentLinkTable connected to the old record
        #        while select forupdate smmActivityParentLinkTable where smmActivityParentLinkTable.ParentType  == smmActivityParentType::BusRel
        #         && smmActivityParentLinkTable.RefRecId == _recId
        #        {
        #            smmActivities = smmActivities::find(smmActivityParentLinkTable.ActivityNumber);
        #            if (smmActivities)
        #            {
        #                smmActivityParentLinkTable.ActivityNumber = smmActivities.ActivityNumber;
        #                smmActivityParentLinkTable.ParentType = parentType;
        #                smmActivityParentLinkTable.RefTableId = smmActivityParentLink::parentType2RefTableId(parentType);
        #                smmActivityParentLinkTable.RefRecId = _newRecId;
        #                smmActivityParentLinkTable.PrimaryLink = true;
        #                smmActivityParentLinkTable.insert();
        #            }
        #        }
        #
        #        ttscommit;
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #convertContacts
        #// Update contact person references
        #private server void convertContacts(TableId _custVendTableId,CustVendAC _custVendAccount)
        #{
        #    ContactPerson contactPerson;
        #    FieldId       accountFieldId;
        #    ;
        #
        #    if (_custVendTableId == tableNum(CustTable))
        #    {
        #        accountFieldId = fieldNum(ContactPerson,CustAccount);
        #    }
        #
        #    if (!this.Party || !_custVendAccount || !accountFieldId)
        #    {
        #        // Cannot connect contact persons to the new customer or vendor due to an error
        #        throw error("@SYS80274");
        #    }
        #
        #
        #    ttsbegin;
        #
        #    // Update vendor account on all contact persons
        #    while select forupdate contactPerson where contactPerson.ContactForParty == this.Party
        #    {
        #        contactPerson.(accountFieldId) = _custVendAccount;
        #        contactPerson.update();
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #convertNoteItTable
        #// Update noteIt references
        #private server void convertNoteItTable(TableId _tableId, RecId _recId, TableId _newTableId, RecId _newRecId)
        #{
        #    #OCCRetryCount
        #    smmNoteItTable smmNoteItTable;
        #    ;
        #
        #    try
        #    {
        #        ttsbegin;
        #
        #        // Run through all the smmNoteItTable connected to the old record
        #        while select forupdate smmNoteItTable where smmNoteItTable.RefTableId  == _tableId && smmNoteItTable.RefRecId == _recId
        #        {
        #            if (smmNoteItTable)
        #            {
        #                // Connect the smmNoteItTable to the new record
        #                smmNoteItTable.RefTableId = _newTableId;
        #                smmNoteItTable.RefRecId   = _newRecId;
        #
        #                smmNoteItTable.update();
        #            }
        #        }
        #
        #        ttscommit;
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #convertResponsibilityAssignments
        #// Update responsibility assignment references
        #void convertResponsibilityAssignments(TableId _tableId,RecId _recId)
        #{
        #    smmResponsibilitiesEmplTable    smmResponsibilitiesEmplTable;
        #    smmResponsibilityGroup          smmResponsibilityGroup;
        #    str                             msg;
        #    ;
        #
        #    // Find if responsibilities are enabled for the new customer/vendor or not
        #    select firstonly smmResponsibilitiesEmplTable
        #        where smmResponsibilitiesEmplTable.RefTableId == this.TableId
        #              && smmResponsibilitiesEmplTable.RefRecId == this.RecId
        #        join RecId from smmResponsibilityGroup
        #        where smmResponsibilityGroup.ResponsibilityId == smmResponsibilitiesEmplTable.ResponsibilityId
        #              && ((_tableId == tableNum(CustTable) && !smmResponsibilityGroup.IsCust)
        #                  || (_tableId == tableNum(VendTable) && !smmResponsibilityGroup.IsVend));
        #
        #    // If responsibility is not enabled
        #    if (smmResponsibilitiesEmplTable)
        #    {
        #        // Transfer of responsibility assignment(s) failed - Responsibility '%1' is not enabled for customers/vendors.
        #        msg = (_tableId == tableNum(CustTable)) ? "@SYS108814" : "@SYS112507" ;
        #        throw error(strFmt(msg,smmResponsibilitiesEmplTable.ResponsibilityId));
        #    }
        #
        #    ttsbegin;
        #
        #    update_recordset smmResponsibilitiesEmplTable
        #        setting RefTableId = _tableId, RefRecId = _recId
        #        where smmResponsibilitiesEmplTable.RefTableId == this.TableId
        #              && smmResponsibilitiesEmplTable.RefRecId == this.RecId;
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #createConvertedBusRel
        #// Store information for converted prospect
        #void createConvertedBusRel(TableId _tableId,CustVendAC _account)
        #{
        #    smmConvertedBusRel convertedBusRel;
        #    ;
        #
        #    convertedBusRel.clear();
        #    convertedBusRel.initFromBusRelTable(this);
        #
        #    switch (_tableId)
        #    {
        #        case tableNum(CustTable) :
        #        convertedBusRel.CustAccount = _account;
        #        break;
        #
        #        case tableNum(VendTable) :
        #        convertedBusRel.VendAccount = _account;
        #        break;
        #    }
        #
        #    convertedBusRel.insert();
        #}
      ENDSOURCE
      SOURCE #custAccount
        #CustAccount custAccount()
        #{
        #    ;
        #    return CustTable::findByPartyRecId(this.Party).AccountNum;
        #}
      ENDSOURCE
      SOURCE #customerGroup
        #//BP Deviation documented
        #display smmCustomerGroup customerGroup()
        #{
        #;
        #return  CustGroup::find(this.CustGroup).Name;
        #}
        #
      ENDSOURCE
      SOURCE #delete
        #/// <summary>
        #///    Delete record, and update CRM transaction log.
        #/// </summary>
        #public void delete()
        #{
        #
        #    // Check to see if the associated dimension attribute value has been used
        #    // in a way that would prevent deletion.
        #    if (!DimensionValidation::canDeleteEntityValue(this))
        #    {
        #        throw error(strFmt("@SYS134392", this.BusRelAccount));
        #    }
        #
        #    ttsbegin;
        #
        #    // Update the associated dimension attribute value.
        #    DimensionAttributeValue::updateForEntityValueDelete(this);
        #
        #    super();
        #
        #    DirPartyRelationship::removeLegalEntityRelationship(this.Party, DirSystemRelationshipType::Prospect);
        #
        #    // Auto delete party at backend
        #    DirParty::autoDeleteParty(this.Party);
        #
        #    // Write to CRM transaction log
        #    smmTransLog::initTrans(this, smmLogAction::delete);
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #deleteActivityParentLink
        #private boolean deleteActivityParentLink()
        #{
        #    smmActivities currentSmmActivities;
        #    smmActivityParentLinkTable smmActivityParentLinkTable;
        #    smmActivityParentLinkTable deleteParentLinkTable;
        #    smmActivityParentType parentType;
        #    RefRecId refRecId;
        #;
        #
        #    if(this.BusRelTypeId == smmBusRelTypeGroup::getCustomerType())
        #    {
        #        parentType = smmActivityParentType::Customer;
        #        refRecId = CustTable::findByPartyRecId(this.Party).RecId;
        #    }
        #    else if(this.BusRelTypeId == smmBusRelTypeGroup::getVendorType())
        #    {
        #        parentType = smmActivityParentType::Vendor;
        #        refRecId = VendTable::findByPartyRecId(this.Party).RecId;
        #    }
        #    else
        #    {
        #        parentType = smmActivityParentType::BusRel;
        #        refRecId = this.RecId;
        #    }
        #
        #    select count(RecId) from currentSmmActivities
        #        where  currentSmmActivities.Closed == NoYes::No
        #    join RecId from smmActivityParentLinkTable
        #        where smmActivityParentLinkTable.ActivityNumber == currentSmmActivities.ActivityNumber &&
        #            smmActivityParentLinkTable.ParentType == parentType &&
        #            smmActivityParentLinkTable.RefRecId   == refRecId;
        #
        #    if(currentSmmActivities.RecId > 0)
        #    {
        #        return checkFailed(strFmt("@SYS128564", tablePName(smmActivityParentLinkTable), "@SYS80847"));
        #    }
        #    else
        #    {
        #        while select ActivityNumber from currentSmmActivities where currentSmmActivities.Closed == NoYes::Yes
        #            join RecId from smmActivityParentLinkTable
        #            where smmActivityParentLinkTable.ActivityNumber == currentSmmActivities.ActivityNumber &&
        #                smmActivityParentLinkTable.ParentType == parentType &&
        #                smmActivityParentLinkTable.RefRecId   == refRecId
        #        {
        #            //We need to delete this prior to ValidateDelete.super since the DELETE ACTION is called out as soon as super is executed
        #            delete_from deleteParentLinkTable where
        #                deleteParentLinkTable.ActivityNumber == currentSmmActivities.ActivityNumber &&
        #                deleteParentLinkTable.ParentType     == parentType     &&
        #                deleteParentLinkTable.RefRecId       == refRecId;
        #        }
        #    }
        #
        #
        #    return true;
        #
        #}
        #
      ENDSOURCE
      SOURCE #email
        #/// <summary>
        #/// Retrieves the primary e-mail electronic address for the party of the business relation.
        #/// </summary>
        #/// <returns>
        #/// The primary e-mail electronic address for the party of the business relation.
        #/// </returns>
        #//BP Deviation Documented
        #display Email email()
        #{
        #    LogisticsElectronicAddress electronicAddress;
        #
        #    electronicAddress = DirParty::primaryElectronicAddress(this.Party, LogisticsElectronicAddressMethodType::Email);
        #
        #    return electronicAddress ? electronicAddress.Locator : '';
        #}
      ENDSOURCE
      SOURCE #hoursOfBusiness
        #//BP Deviation documented
        #display smmHoursOfBusiness hoursOfBusiness()
        #{
        #    ;
        #    if (hasFieldAccess(this.TableId,fieldNum(smmBusRelTable,OpenToTime)) && hasFieldAccess(this.TableId,fieldNum(smmBusRelTable,OpenFromTime)))
        #    {
        #        return strFmt("@SYS110430",time2str(this.OpenFromTime,1,2),time2str(this.OpenToTime,1,2));
        #    }
        #    else
        #    {
        #        return "";
        #    }
        #}
      ENDSOURCE
      SOURCE #initFromDirParty
        #void initFromDirParty(DirParty _dirParty)
        #{
        #    ;
        #    this.Party = _dirParty.getRecId();
        #}
      ENDSOURCE
      SOURCE #initValue
        #/// <summary>
        #///    Initialize values of a new record.
        #/// </summary>
        #public server void initValue()
        #{
        #    smmParametersTable smmParametersTable;
        #    ;
        #
        #
        #    ttsbegin;
        #
        #    smmParametersTable = smmParametersTable::find();
        #
        #    this.setMainContact();
        #
        #    this.BusRelTypeId = smmParametersTable.BusRelTypeId;
        #
        #    this.CustGroup      = smmParametersTable.CustGroup;
        #    this.VendGroup      = smmParametersTable.VendGroupId;
        #
        #    this.DirectMail     = NoYes::Yes;
        #
        #    this.OpenFromTime   = smmParametersTable.OpenFromTime;
        #    this.OpenToTime     = smmParametersTable.OpenToTime;
        #
        #    this.Currency       = smmParametersTable.CurrencyCode;
        #
        #    if (!this.Currency)
        #    {
        #        this.Currency   = Ledger::accountingCurrency(CompanyInfo::find().RecId);
        #    }
        #
        #
        #    this.Status         = smmParametersTable.BusRelStatus;
        #
        #    ttscommit;
        #
        #    super();
        #    this.Party = 0;            // Reset PartyId, it might be set when templates are used
        #}
      ENDSOURCE
      SOURCE #insert
        #/// <summary>
        #/// Inserts an element into a table and updates the CRM transaction log.
        #/// </summary>
        #public void insert()
        #{
        #    ttsbegin;
        #
        #    super();
        #
        #    // Insert the new search text, as long as it is not tied to a customer/vendor
        #    if (smmBusRelTypeGroup::find(this.BusRelTypeId).TableType == smmBusRelTypeSourceTable::Relation)
        #    {
        #        MCRFullTextSearch::insert(this);
        #    }
        #
        #    DirPartyRelationship::createLegalEntityRelationship(this.Party, this.DataAreaId, DirSystemRelationshipType::Prospect);
        #
        #    // Insert record in CRM transaction log
        #    smmTransLog::initTrans(this, smmLogAction::insert);
        #
        #    // Create default location if using existing party
        #    LogisticsLocationDefault::createDefaultForExistingParty(this);
        #    if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #    {
        #        this.SysExtensionSerializerMap::postInsert();
        #    }
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #mainContactName
        #//BP Deviation documented
        #display CrmWorkerRecId mainContactName()
        #{
        #    return this.MainContactWorker;
        #}
        #
      ENDSOURCE
      SOURCE #mcrCity
        #/// <summary>
        #/// Retrives the primary postal city for the business relation's party.
        #/// </summary>
        #/// <returns>
        #/// The primary postal city for the business relation's party.
        #/// </returns>
        #private LogisticsAddressCity mcrCity()
        #{
        #
        #    return DirParty::primaryPostalAddress(this.Party).City;
        #}
      ENDSOURCE
      SOURCE #mcrDisplayOpenQuoteExist
        #/// <summary>
        #/// Displays if the business relations record has an open quote.
        #/// </summary>
        #/// <returns>
        #/// Image resource number for open sales order quotes.
        #/// </returns>
        #public display ImageRes mcrDisplayOpenQuoteExist()
        #{
        #    #MACROLIB.MCRresAppl
        #    SalesQuotationTable salesQuotationTable;
        #    ImageRes            image;
        #
        #
        #    select firstonly RecId from salesQuotationTable
        #        where  salesQuotationTable.BusRelAccount   == this.BusRelAccount
        #        &&    (salesQuotationTable.QuotationStatus == SalesQuotationStatus::Created
        #        ||     salesQuotationTable.QuotationStatus == SalesQuotationStatus::Sent
        #        ||     salesQuotationTable.QuotationStatus == SalesQuotationStatus::Cancelled);
        #
        #    if(salesQuotationTable.RecId != 0)
        #    {
        #        image = #MCR_image_openQuote;
        #    }
        #    else
        #    {
        #        image = 0;
        #    }
        #
        #    return image;
        #}
      ENDSOURCE
      SOURCE #mcrInitMCRFieldsFromCustomer
        #/// <summary>
        #/// Loads fields from the passed <c>CustTable</c> record to the <c>smmBusRelTable</c> record.
        #/// </summary>
        #/// <param name="_custTable">
        #/// A record in the <c>CustTable</c> table.
        #/// </param>
        #public void mcrInitMCRFieldsFromCustomer(CustTable _custTable)
        #{
        #    MCRsmmBusRelTable       mcrsmmBusRelTable;
        #
        #    mcrsmmBusRelTable       = MCRsmmBusRelTable::find(this.RecId);
        #    if (mcrsmmBusRelTable)
        #    {
        #        mcrsmmBusRelTable.setCustTableFields(_custTable);
        #    }
        #}
      ENDSOURCE
      SOURCE #mcrIsListDeleted
        #/// <summary>
        #/// Determines whether or not the current prospect has
        #///     been deleted.
        #/// </summary>
        #/// <returns>
        #/// true, if prospect has been deleted; otherwise, false.
        #/// </returns>
        #public boolean mcrIsListDeleted()
        #{
        #    MCRsmmBusRelTable mcrsmmBusRelTable = MCRsmmBusRelTable::find(this.RecId);
        #
        #    return (mcrSmmBusRelTable && mcrsmmbusrelTable.isListDeleted);
        #}
      ENDSOURCE
      SOURCE #mcrPackMCRsmmBusRelTable
        #/// <summary>
        #/// Packs the prospect information.
        #/// </summary>
        #/// <param name="_mcrsmmBusRelTable">
        #/// The prospect reference.
        #/// </param>
        #public void mcrPackMCRsmmBusRelTable(MCRsmmBusRelTable _mcrsmmBusRelTable)
        #{
        #    _mcrsmmBusRelTable.smmBusRelTable = this.RecId;
        #
        #    this.SysExtensionSerializerMap::packExtensionTable(_mcrsmmBusRelTable);
        #}
        #
      ENDSOURCE
      SOURCE #mcrsmmBusRelTable
        #/// <summary>
        #/// Recovers MCR extension table
        #/// </summary>
        #/// <returns>
        #/// A record of <c>MCRsmmBusRelTable</c>
        #/// </returns>
        #public MCRsmmBusRelTable mcrsmmBusRelTable()
        #{
        #    return this.SysExtensionSerializerMap::getExtensionTable(tableNum(MCRsmmBusRelTable));
        #}
      ENDSOURCE
      SOURCE #mcrStreet
        #/// <summary>
        #/// Retrives the primary postal street for the business relation's party.
        #/// </summary>
        #/// <returns>
        #/// The primary postal street for the business relation's party.
        #/// </returns>
        #private LogisticsAddressStreet mcrStreet()
        #{
        #
        #    return DirParty::primaryPostalAddress(this.Party).Street;
        #}
      ENDSOURCE
      SOURCE #mcrSynchDefaultContact
        #/// <summary>
        #/// Creates or updates the default contact which should
        #/// be created when the user populates/updates the name fields
        #/// on the business relation.
        #/// </summary>
        #private void mcrSynchDefaultContact()
        #{
        #    ContactPerson   contactPerson;
        #    NumberSeq       numberSeq;
        #
        #    ttsbegin;
        #    contactPerson = ContactPerson::findByPartyRecId(this.Party,true);
        #
        #    if(!contactPerson)
        #    {
        #        numberSeq = NumberSeq::newGetNum(NumberSeqReference::findReference(extendedTypeNum(ContactPersonId)));
        #
        #        if(!numberSeq)
        #        {
        #            throw error("@MCR25393");
        #        }
        #        contactPerson.ContactPersonId = numberSeq.num();
        #        contactPerson.initFromBusRel(this);
        #        contactPerson.MCRIsDefaultContact = NoYes::Yes;
        #
        #        if(contactPerson.validateWrite())
        #        {
        #            contactPerson.write();
        #        }
        #    }
        #
        #    ttscommit;
        #
        #}
      ENDSOURCE
      SOURCE #mcrUpdateTargetLists
        #/// <summary>
        #/// Updates target list w/ cust account when a prospect gets converted to a customer.
        #/// </summary>
        #/// <param name="_busRelTable">
        #/// The <c>smmBusRelTable</c> table record to find a target list.
        #/// </param>
        #/// <param name="_custTable">
        #/// The <c>CustTable</c> table record to update the target list.
        #/// </param>
        #server public void mcrUpdateTargetLists(smmBusRelTable  _busRelTable, CustTable _custTable)
        #{
        #    MCRTargetList     mcrTargetList;
        #    ;
        #    // Update all target lists connected to this BusRelAccount
        #    ttsbegin;
        #
        #    // Run through all quotation tables
        #    while select forupdate mcrTargetList
        #        where mcrTargetList.Party == _busRelTable.Party
        #    {
        #        // Set the CustAccount on the TargetList
        #        mcrTargetList.CustAccount = _custTable.AccountNum;
        #        mcrTargetList.Party = _custTable.Party;
        #        if(mcrTargetList.validateWrite())
        #        {
        #            mcrTargetList.update();
        #        }
        #
        #    }
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #mcrZipCode
        #/// <summary>
        #/// Retrives the primary postal zipcode for the business relation's party.
        #/// </summary>
        #/// <returns>
        #/// The primary postal zipcode for the business relation's party.
        #/// </returns>
        #private LogisticsAddressZipCodeId mcrZipCode()
        #{
        #    return DirParty::primaryPostalAddress(this.Party).ZipCode;
        #}
      ENDSOURCE
      SOURCE #modifiedField
        #public void modifiedField(FieldId _fieldId)
        #{
        #    super(_fieldId);
        #}
        #
      ENDSOURCE
      SOURCE #name
        #/// <summary>
        #/// Retrieves the name for the party of the business relation.
        #/// </summary>
        #/// <returns>
        #/// The name for the party of the business relation.
        #/// </returns>
        #//BP deviation documented
        #display DirPartyName name()
        #{
        #    DirPartyTable   dirPartyTable;
        #    DirPartyName    partyName;
        #    boolean         isSet = false;
        #    ;
        #
        #    if (this.hasRelatedTable(identifierStr(dirPartyTable)))
        #    {
        #        dirPartyTable = this.relatedTable(identifierStr(dirPartyTable)) as DirPartyTable;
        #
        #        //Check to make sure the fields we are accessing are selected.
        #        if (dirPartyTable && dirPartyTable.isFieldDataRetrieved(fieldStr(DirPartyTable, Name)))
        #        {
        #            partyName = dirPartyTable.Name;
        #            isSet = true;
        #        }
        #    }
        #
        #    //If we aren't joined to DirPartyTable or it isn't selected, then do a query to get it.
        #    if(!isSet)
        #    {
        #        partyName = DirPartyTable::getName(this.Party);
        #    }
        #
        #    return partyName;
        #}
      ENDSOURCE
      SOURCE #partyType
        #/// <summary>
        #/// Returns the type of the party for the business relation.
        #/// </summary>
        #/// <returns>
        #/// The type of the party for the business relation.
        #/// </returns>
        #DirPartyType partyType()
        #{
        #    ;
        #    return DirPartyTable::findRec(this.Party).type();
        #}
      ENDSOURCE
      SOURCE #phone
        #/// <summary>
        #/// Retrieves the primary telephone for the party of the business relation.
        #/// </summary>
        #/// <returns>
        #/// The primary telephone for the party of the business relation.
        #/// </returns>
        #//BP Deviation Documented
        #display Phone phone()
        #{
        #    LogisticsElectronicAddress electronicAddress;
        #
        #    electronicAddress = DirParty::primaryElectronicAddress(this.Party, LogisticsElectronicAddressMethodType::Phone);
        #
        #    return electronicAddress ? electronicAddress.Locator : '';
        #}
      ENDSOURCE
      SOURCE #phoneLocal
        #/// <summary>
        #/// Retrieves the local telephone or extension for the party of the business relation.
        #/// </summary>
        #/// <returns>
        #/// The local telephone or extension for the party of the business relation.
        #/// </returns>
        #//BP Deviation Documented
        #display PhoneLocal phoneLocal()
        #{
        #    LogisticsElectronicAddress electronicAddress;
        #
        #    electronicAddress = DirParty::primaryElectronicAddress(this.Party, LogisticsElectronicAddressMethodType::Phone);
        #
        #    return electronicAddress ? electronicAddress.LocatorExtension : '';
        #}
      ENDSOURCE
      SOURCE #postalAddress
        #/// <summary>
        #/// Retrieves the primary postal address for the party of the business relation.
        #/// </summary>
        #/// <returns>
        #/// The primary postal address for the party party of the business relation.
        #/// </returns>
        #LogisticsPostalAddress postalAddress()
        #{
        #    return DirParty::primaryPostalAddress(this.Party);
        #}
      ENDSOURCE
      SOURCE #previewPaneTitle
        #/// <summary>
        #/// Gives the title on top of the preview pane.
        #/// </summary>
        #/// <returns>
        #/// The title field of the preview pane.
        #/// </returns>
        #// BP deviation documented
        #display Caption previewPaneTitle()
        #{
        #    return strFmt("@SYS327590", this.BusRelAccount, this.name());
        #}
      ENDSOURCE
      SOURCE #relation2Customer
        #/// <summary>
        #/// Creates a customer by using the specified business relation and sets the fields of the
        #/// <c>CustTable</c> table by using the values from the specified business relation.
        #/// </summary>
        #/// <param name="_smmBusRelTable">
        #/// The business relation.
        #/// </param>
        #/// <param name="_custAccount">
        #/// The customer account.
        #/// </param>
        #/// <returns>
        #/// The customer account of the inserted record.
        #/// </returns>
        #private server CustAccount relation2Customer(smmBusRelTable _smmBusRelTable, CustAccount _custAccount = '')
        #{
        #    #define.blank('')
        #
        #    CustTable               custTable = null;
        #    boolean                 updateCRM = true;
        #
        #    if (!_smmBusRelTable.RecId)
        #    {
        #        return #blank;
        #    }
        #
        #    ttsbegin;
        #
        #    custTable.clear();
        #    custTable.initValue();
        #
        #    if (!_custAccount)
        #    {
        #        custTable.AccountNum = smmParameters::getNumber(smmNumbSeqUsed::Customer);
        #    }
        #    else
        #    {
        #        custTable.AccountNum = _custAccount;
        #    }
        #
        #    if (custTable.AccountNum)
        #    {
        #        custTable.Party                 = _smmBusRelTable.Party;
        #
        #        if (_smmBusRelTable.CustGroup)
        #        {
        #            custTable.CustGroup         = _smmBusRelTable.CustGroup;
        #        }
        #
        #        if (_smmBusRelTable.Currency)
        #        {
        #            custTable.Currency          = _smmBusRelTable.Currency;
        #        }
        #
        #        custTable.initFromCustGroup(CustGroup::find(_smmBusRelTable.CustGroup));
        #
        #        if (_smmBusRelTable.DefaultDimension)
        #        {
        #            custTable.DefaultDimension      = _smmBusRelTable.DefaultDimension;
        #        }
        #
        #        custTable.CompanyIdSiret        = _smmBusRelTable.CompanyIdSiret;
        #        custTable.CompanyNAFCode        = _smmBusRelTable.CompanyNAFCode;
        #
        #        custTable.Blocked               = _smmBusRelTable.Blocked;
        #        custTable.OneTimeCustomer       = _smmBusRelTable.OneTimeRelation;
        #        custTable.CreditMax             = _smmBusRelTable.CreditMax;
        #        custTable.CreditRating          = _smmBusRelTable.CreditRating;
        #        custTable.MandatoryCreditLimit  = _smmBusRelTable.MandatoryCreditLimit;
        #        custTable.DlvTerm               = _smmBusRelTable.DlvTerm;
        #        custTable.SalesCalendarId       = _smmBusRelTable.SalesCalendarId;
        #        custTable.DlvMode               = _smmBusRelTable.DlvMode;
        #        custTable.FreightZone           = _smmBusRelTable.FreightZone;
        #        custTable.DestinationCodeId     = _smmBusRelTable.DestinationCodeId;
        #        if (_smmBusRelTable.InclTax)
        #        {
        #            custTable.InclTax               = _smmBusRelTable.InclTax;
        #        }
        #        if (_smmBusRelTable.TaxGroup)
        #        {
        #            custTable.TaxGroup              = _smmBusRelTable.TaxGroup;
        #        }
        #        custTable.SegmentId             = _smmBusRelTable.Segment;
        #        custTable.SubsegmentId          = _smmBusRelTable.Subsegment;
        #        custTable.SalesDistrictId       = _smmBusRelTable.SalesDistrict;
        #        custTable.CompanyChainId        = _smmBusRelTable.CompanyChain;
        #        custTable.MainContactWorker     = _smmBusRelTable.MainContactWorker;
        #        custTable.Memo                  = _smmBusRelTable.Memo;
        #        custTable.LineOfBusinessId      = _smmBusRelTable.LineOfBusinessId;
        #
        #        if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #        {
        #            this.mcrInitMCRFieldsFromCustomer(custTable);
        #            custTable.Party = _smmBusRelTable.Party;
        #            // Insert customer, but don't update back on the business relation table
        #            updateCRM = false;
        #        }
        #
        #        //--> Credit Card Begin
        #        CreditCardTable::convertBusRel2Cust(_smmBusRelTable,custTable);
        #        custTable.insert(DirPartyType::None, '', updateCRM);
        #    }
        #
        #    if (!custTable.AccountNum)
        #    {
        #        ttsabort;
        #        return #blank;
        #    }
        #
        #    ttscommit;
        #
        #    return custTable.AccountNum;
        #}
        #
      ENDSOURCE
      SOURCE #relation2Vendor
        #/// <summary>
        #/// Creates a vendor from a specified business relation.
        #/// </summary>
        #/// <param name="_smmBusRelTable">
        #/// The business relation vendor.
        #/// </param>
        #/// <param name="_vendAccount">
        #/// The vendor account.
        #/// </param>
        #/// <returns>
        #/// The vendor account of the inserted record.
        #/// </returns>
        #/// <remarks>
        #/// The fields of the <c>VendTable</c> table are set with the values from the business relation.
        #/// </remarks>
        #private server VendAccount relation2Vendor(smmBusRelTable _smmBusRelTable, VendAccount _vendAccount = '')
        #{
        #    #define.blank('')
        #
        #    VendTable             vendTable = null;
        #
        #
        #    if (!_smmBusRelTable.RecId)
        #    {
        #        return #blank;
        #    }
        #
        #    // Check that vend group is filled out on the business relation
        #    if (!_smmBusRelTable.VendGroup)
        #    {
        #        // Cannot convert to vendor because no vendor group is selected. Please select a vendor group in the General tab
        #        checkFailed("@SYS80328");
        #
        #        return #blank;
        #    }
        #
        #    ttsbegin;
        #
        #    vendTable.clear();
        #    vendTable.initValue();
        #
        #    if (!_vendAccount)
        #    {
        #        vendTable.AccountNum        = smmParameters::getNumber(smmNumbSeqUsed::Vendor);
        #    }
        #    else
        #    {
        #        vendTable.AccountNum        = _vendAccount;
        #    }
        #
        #    if (vendTable.AccountNum)
        #    {
        #        vendTable.Party             = _smmBusRelTable.Party;
        #        vendTable.Currency          = _smmBusRelTable.Currency;
        #        vendTable.DefaultDimension  = _smmBusRelTable.DefaultDimension;
        #
        #        vendTable.VendGroup         = _smmBusRelTable.VendGroup;
        #        vendTable.initFromVendGroup(VendGroup::find(_smmBusRelTable.VendGroup));
        #
        #
        #        vendTable.CompanyIdSiret    = _smmBusRelTable.CompanyIdSiret;
        #        vendTable.CompanyNAFCode    = _smmBusRelTable.CompanyNAFCode;
        #
        #        vendTable.Blocked           = _smmBusRelTable.Blocked;
        #        vendTable.OneTimeVendor     = _smmBusRelTable.OneTimeRelation;
        #
        #        vendTable.CreditMax         = _smmBusRelTable.CreditMax;
        #        vendTable.CreditRating      = _smmBusRelTable.CreditRating;
        #
        #        vendTable.DlvTerm           = _smmBusRelTable.DlvTerm;
        #        vendTable.DlvMode           = _smmBusRelTable.DlvMode;
        #        vendTable.FreightZone       = _smmBusRelTable.FreightZone;
        #        vendTable.DestinationCodeId = _smmBusRelTable.DestinationCodeId;
        #
        #        vendTable.InclTax           = _smmBusRelTable.InclTax;
        #        if (_smmBusRelTable.TaxGroup)
        #        {
        #            vendTable.TaxGroup          = _smmBusRelTable.TaxGroup;
        #        }
        #        vendTable.SegmentId         = _smmBusRelTable.Segment;
        #        vendTable.SubsegmentId      = _smmBusRelTable.Subsegment;
        #        vendTable.CompanyChainId    = _smmBusRelTable.CompanyChain;
        #        vendTable.MainContactWorker = HcmWorker::find(_smmBusRelTable.MainContactWorker).RecId;
        #        vendTable.Memo              = _smmBusRelTable.Memo;
        #
        #        vendTable.insert();
        #
        #
        #    }
        #    if (!vendTable.AccountNum)
        #    {
        #        ttsabort;
        #        return #blank;
        #    }
        #
        #    ttscommit;
        #
        #    return vendTable.AccountNum;
        #}
        #
      ENDSOURCE
      SOURCE #renamePrimaryKey
        #/// <summary>
        #/// Renames foreign keys in other tables according to the change of the corresponding primary key value
        #/// in this table.
        #/// </summary>
        #/// <remarks>
        #/// This method is needed to make sure that no duplicates are generated.
        #/// </remarks>
        #public void renamePrimaryKey()
        #{
        #    Common originalRecord = this.orig();
        #
        #    super();
        #
        #    DimensionStorage::syncRenamedValue(this, originalRecord);
        #}
      ENDSOURCE
      SOURCE #setMainContact
        #/// <summary>
        #/// Uses the <c>smmUtility</c> class to set the main contact.
        #/// </summary>
        #private void setMainContact()
        #{
        #    // Set main contact to the current employee logged on
        #    this.MainContactWorker = smmUtility::getCurrentContactWorker();
        #}
      ENDSOURCE
      SOURCE #showDocHanIcon
        #/// <summary>
        #/// Shows the icon that handles the document.
        #/// </summary>
        #/// <returns>
        #/// The icon number.
        #/// </returns>
        #//BP Deviation documented
        #display smmDocIconNum showDocHanIcon()
        #{
        #    #macrolib.resource
        #    ;
        #
        #    if (this.Party && this.DataAreaId && (select firstonly docuRef where docuRef.RefCompanyId  == this.DataAreaId && docuRef.Party == this.Party).RecId)
        #    {
        #        return #RES_NODE_DOC;
        #    }
        #
        #    return #RES_AM_NEW;
        #}
      ENDSOURCE
      SOURCE #showEndTime
        #//BP Deviation documented
        #display smmEndTimeAsString showEndTime()
        #{
        #    ;
        #    if (hasFieldAccess(this.TableId,fieldNum(smmBusRelTable,OpenToTime)))
        #    {
        #        return time2str(this.OpenToTime,1,2);
        #    }
        #    else
        #    {
        #        return "";
        #    }
        #}
      ENDSOURCE
      SOURCE #showMainContactName
        #/// <summary>
        #/// Displays the name of the main contact.
        #/// </summary>
        #/// <returns>
        #/// The name of the main contact.
        #/// </returns>
        #//BP Deviation documented
        #display EmplName showMainContactName()
        #{
        #    DirPartyTable   partyTable;
        #    HcmWorker       hcmWorker;
        #
        #    // Return the name of the main responsible
        #
        #    select RecId from hcmWorker
        #            where hcmWorker.RecId == this.MainContactWorker
        #        join Name from partyTable
        #            where partyTable.RecId == hcmWorker.Person;
        #
        #    return partyTable.Name;
        #
        #}
        #
        #
      ENDSOURCE
      SOURCE #showNoteItIcon
        #/// <summary>
        #/// Gets the NoteIt\ icon based on the priority set in the <c>smmNoteItTable</c> table.
        #/// </summary>
        #/// <returns>
        #/// The icon number.
        #/// </returns>
        #/// <remarks>
        #/// The icon can be low, medium, or high.
        #/// </remarks>
        #//BP Deviation documented
        #display smmNoteItIconNum showNoteItIcon()
        #{
        #    #define.highPriority(3232)
        #    #define.lowPrioriry(3231)
        #    #define.normalPriority(3233)
        #    #define.noNote(809)
        #
        #    smmNoteItTable smmNoteItTable;
        #    ;
        #
        #    smmNoteItTable = smmNoteItTable::find(this.RecId, this.TableId);
        #
        #    if (smmNoteItTable.NoteItActive == NoYes::Yes)
        #    {
        #        switch (smmNoteItTable.NoteItPriority)
        #        {
        #            case smmNoteItPriority::High    :
        #                return #highPriority;
        #
        #            case smmNoteItPriority::Low     :
        #                return #lowPrioriry;
        #
        #            case smmNoteItPriority::Normal  :
        #                return #normalPriority;
        #
        #            default                         :
        #                return 0;
        #        }
        #    }
        #    else
        #    {
        #        return #noNote;
        #    }
        #
        #    return 0;
        #}
      ENDSOURCE
      SOURCE #showPartyMatchIcon
        #//BP Deviation documented
        #display DirPartyMatchIcon showPartyMatchIcon()
        #{
        #    ;
        #    return DirParty::showPartyMatchIcon(this);
        #}
      ENDSOURCE
      SOURCE #showStartTime
        #//BP Deviation documented
        #display smmStartTimeAsString showStartTime()
        #{
        #    ;
        #    if (hasFieldAccess(this.TableId,fieldNum(smmBusRelTable,OpenFromTime)))
        #    {
        #        return time2str(this.OpenFromTime,1,2);
        #    }
        #    else
        #    {
        #        return "";
        #    }
        #}
      ENDSOURCE
      SOURCE #update
        #public void update(boolean _updateMasterTables = true)
        #{
        #    smmBusRelTypeGroup  busRelTypeGroup;
        #    smmBusRelTable this_Orig = this.orig();
        #    ttsbegin;
        #
        #    super();
        #
        #    busRelTypeGroup = smmBusRelTypeGroup::find(this.BusRelTypeId);
        #
        #    // Update the new search text, as long as it is not tied to a customer/vendor
        #    if (busRelTypeGroup.TableType == smmBusRelTypeSourceTable::Relation && !this.mcrIsListDeleted())
        #    {
        #        MCRFullTextSearch::update(this);
        #    }
        #    else
        #    {
        #        // If the relation is being assigned a customer or a vendor, then delete the search
        #        MCRFullTextSearch::delete(this);
        #    }
        #
        #    // Write to CRM transaction log
        #    smmTransLog::initTrans(this, smmLogAction::update);
        #
        #    // Should the relation master table be updated
        #    if (_updateMasterTables)
        #    {
        #        switch (busRelTypeGroup.TableType)
        #        {
        #            case smmBusRelTypeSourceTable::Customer :
        #            // Write relation information back to the customer
        #            this.updateCustTable();
        #            break;
        #
        #            case smmBusRelTypeSourceTable::Vendor :
        #            // Write relation information back to the vendor
        #            this.updateVendTable();
        #            break;
        #        }
        #    }
        #    if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #    {
        #        this.SysExtensionSerializerMap::postUpdate();
        #    }
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #updateCustTable
        #/// <summary>
        #/// Updates an entry in the <c>CustTable</c> table with the values from the <c>BusRelTable</c> table.
        #/// </summary>
        #server private void updateCustTable()
        #{
        #    CustTable   custTable;
        #
        #    ttsbegin;
        #
        #    // Find customer connected to the business relation
        #    custTable = CustTable::findByPartyRecId(this.Party, true);
        #
        #    if (custTable)
        #    {
        #        // Update customer with information from business relation
        #        custTable.DefaultDimension      = this.DefaultDimension;
        #        custTable.LineOfBusinessId      = this.LineOfBusinessId;
        #        custTable.CustGroup             = this.CustGroup;
        #        custTable.CompanyNAFCode        = this.CompanyNAFCode;
        #        custTable.CompanyIdSiret        = this.CompanyIdSiret;
        #
        #        custTable.Blocked               = this.Blocked;
        #        custTable.OneTimeCustomer       = this.OneTimeRelation;
        #        custTable.CreditMax             = this.CreditMax;
        #        custTable.CreditRating          = this.CreditRating;
        #        custTable.MandatoryCreditLimit  = this.MandatoryCreditLimit;
        #        custTable.DlvTerm               = this.DlvTerm;
        #        custTable.DlvMode               = this.DlvMode;
        #        custTable.FreightZone           = this.FreightZone;
        #        custTable.DestinationCodeId     = this.DestinationCodeId;
        #
        #        custTable.InclTax               = this.InclTax;
        #
        #        custTable.SalesDistrictId        = this.SalesDistrict;
        #        custTable.SegmentId              = this.Segment;
        #        custTable.SubsegmentId           = this.Subsegment;
        #        custTable.CompanyChainId         = this.CompanyChain;
        #        custTable.MainContactWorker      = this.MainContactWorker;
        #        custTable.Memo                   = this.Memo;
        #
        #        if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #        {
        #            this.mcrInitMCRFieldsFromCustomer(custTable);
        #        }
        #
        #        // Update customer , business relation should not be updated again in this call
        #        custTable.update(false,false);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #updateQuotationJournals
        #server public void updateQuotationJournals(CustAccount _custAccount)
        #{
        #    CustQuotationJour      custQuotationJour;
        #    ;
        #
        #    // Update all quotation journals connected to the business relation
        #    ttsbegin;
        #
        #    update_recordset custQuotationJour
        #        setting InvoiceAccount  = _custAccount,
        #                OrderAccount    = _custAccount
        #        where custQuotationJour.BusRelAccount == this.BusRelAccount;
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #updateQuotations
        #server public void updateQuotations(CustAccount _custAccount)
        #{
        #    SalesQuotationTable     salesQuotationTable;
        #    SalesQuotationLine      salesQuotationLine;
        #    ;
        #
        #    // Update all quotations connected to this BusRelAccount
        #    ttsbegin;
        #
        #    // Run through all quotation tables
        #    while select forupdate salesQuotationTable where salesQuotationTable.BusRelAccount == this.BusRelAccount
        #    {
        #        // Set the CustAccount on the SalesQuotationTable
        #        salesQuotationTable.CustAccount     = _custAccount;
        #        salesQuotationTable.InvoiceAccount  = _custAccount;
        #        salesQuotationTable.BusRelAccount   = '';
        #        salesQuotationTable.update(false);
        #
        #        // Run through all quotation lines
        #        while select forupdate salesQuotationLine where salesQuotationLine.QuotationId == salesQuotationTable.QuotationId
        #        {
        #            // Set the CustAccount and CustGroup on the SalesQuotationLine
        #            salesQuotationLine.CustAccount  = _custAccount;
        #            salesQuotationLine.update();
        #        }
        #    }
        #
        #    ttscommit;
        #}
        #
      ENDSOURCE
      SOURCE #updateReferences
        #// When a prospect is converted to customer/vendor all references need to be updated to new customer/vendor
        #public void updateReferences(TableId _tableId,RecId _recId,DataAreaId _dataAreaId,CustVendAC _account)
        #{
        #    XDSServices xdsServices;
        #
        #    xdsServices = new XDSServices();
        #
        #    // Turn off XDS for this operation.
        #    // Quotation and Journals are based on smmCusBusRelView, at this point smmBusRelTable record has been already converted to
        #    // CustTable and the view is either one or the other but Customer takes higher priority.
        #    xdsServices.setXDSState(0);
        #
        #    ttsbegin;
        #
        #    if (this.RecId)
        #    {
        #        // update activity links
        #        this.convertActivities(this.TableId, this.RecId, _tableId, _recId);
        #
        #        // Transfer note-it from relation to the new customer/vendor
        #        this.convertNoteItTable(this.TableId, this.RecId, _tableId, _recId);
        #
        #        // Change the responsibility assignments from prospect to customer/vendor
        #        this.convertResponsibilityAssignments(_tableId,_recId);
        #
        #        // Change the assignments of contactpersons from relation to customer/vendor
        #        if(_tableId != tableNum(VendTable))
        #        {
        #            this.convertContacts(_tableId, _account);
        #        }
        #
        #        // Transfer document from the relation to the new customer/vendor
        #        smmBusRelTable::transferDocuments(this.TableId, this.RecId, this.DataAreaId,  _tableId, _recId, _dataAreaId);
        #
        #        // Update Source Type References on Lead and Opportunity records
        #        smmSourceType::updateSourceType(_tableId,this.RecId, _recId);
        #
        #        // Customer specific references
        #        if (_tableId == tableNum(CustTable))
        #        {
        #            // Find and update all quotations
        #            this.updateQuotations(_account);
        #
        #            // Find and update all quotation journals
        #            this.updateQuotationJournals(_account);
        #        }
        #    }
        #    ttscommit;
        #
        #    // Turn back XDS on
        #    xdsServices.setXDSState(1);
        #}
      ENDSOURCE
      SOURCE #updateVendTable
        #/// <summary>
        #/// Updates the <c>VendTable</c> table with values from the <c>BusRelTable</c> table.
        #/// </summary>
        #server private void updateVendTable()
        #{
        #    VendTable   vendTable;
        #    ;
        #
        #    ttsbegin;
        #
        #    // Find vendor connected to the business relation
        #    vendTable = VendTable::findByPartyRecId(this.Party, true);
        #
        #    if (vendTable)
        #    {
        #        // Update vendor with information from business relation
        #        vendTable.DefaultDimension  = this.DefaultDimension;
        #        vendTable.LineOfBusinessId  = this.LineOfBusinessId;
        #        vendTable.Currency          = this.Currency;
        #        vendTable.VendGroup         = this.VendGroup;
        #        vendTable.CompanyNAFCode    = this.CompanyNAFCode;
        #        vendTable.CompanyIdSiret    = this.CompanyIdSiret;
        #
        #        vendTable.Blocked           = this.Blocked;
        #        vendTable.OneTimeVendor     = this.OneTimeRelation;
        #
        #        vendTable.CreditMax         = this.CreditMax;
        #        vendTable.CreditRating      = this.CreditRating;
        #
        #        vendTable.DlvTerm           = this.DlvTerm;
        #        vendTable.DlvMode           = this.DlvMode;
        #        vendTable.FreightZone       = this.FreightZone;
        #        vendTable.DestinationCodeId = this.DestinationCodeId;
        #
        #        vendTable.InclTax           = this.InclTax;
        #
        #        vendTable.SegmentId              = this.Segment;
        #        vendTable.SubsegmentId           = this.Subsegment;
        #        vendTable.CompanyChainId         = this.CompanyChain;
        #        vendTable.MainContactWorker      = HcmWorker::find(this.MainContactWorker).RecId;
        #        vendTable.Memo                   = this.Memo;
        #
        #
        #        // Update vendor. Business relation should not be update again in this call
        #        vendTable.update(false, false);
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #url
        #/// <summary>
        #/// Retrieves the primary UDL electronic address for the party of the business relation.
        #/// </summary>
        #/// <returns>
        #/// The primary URL electronic address for the party of the business relation.
        #/// </returns>
        #//BP Deviation Documented
        #display URL url()
        #{
        #    LogisticsElectronicAddress electronicAddress;
        #
        #    electronicAddress = DirParty::primaryElectronicAddress(this.Party, LogisticsElectronicAddressMethodType::URL);
        #
        #    return electronicAddress ? electronicAddress.Locator : '';
        #}
      ENDSOURCE
      SOURCE #validateDelete
        #public boolean validateDelete()
        #{
        #    boolean ret;
        #
        #    ret = this.deleteActivityParentLink();
        #
        #    if(ret)
        #        ret = super();
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #validateField
        #public boolean validateField(FieldId _fieldId)
        #{
        #    boolean             ret;
        #    smmBusRelTable      busRelTableOrig = this.orig();
        #
        #
        #    ret = super(_fieldId);
        #
        #    if (ret)
        #    {
        #        switch (_fieldId)
        #        {
        #
        #            case fieldNum(smmBusRelTable, CreditMax) :
        #            if (this.CreditMax < 0)
        #            {
        #                // The credit maximum cannot be a negative amount
        #                ret = checkFailed("@SYS69970");
        #            }
        #            break;
        #
        #            case fieldNum(smmBusRelTable, MainContactWorker) :
        #                if (this.MainContactWorker)
        #                {
        #                    ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.MainContactWorker);
        #                }
        #                break;
        #
        #            case fieldNum(smmBusRelTable, OpenFromTime):
        #            case fieldNum(smmBusRelTable, OpenToTime):
        #            // Check that open to time is not before open from time
        #            if (this.OpenFromTime > this.OpenToTime)
        #            {
        #                // The Closing time you have selected is before the Opening time.
        #                warning("@SYS99916");
        #            }
        #            break;
        #
        #            case fieldNum(smmBusRelTable,BusRelTypeId) :
        #
        #            if (this.BusRelTypeId && smmBusRelTypeGroup::find(this.BusRelTypeId).TableType != smmBusRelTypeSourceTable::Relation)
        #            {
        #                // Cannot create business relation of type customer/vendor directly.
        #                ret = checkFailed("@SYS111990");
        #                break;
        #            }
        #
        #            if (this.RecId && busRelTableOrig.BusRelTypeId && smmBusRelTypeGroup::find(this.BusRelTypeId).TableType == smmBusRelTypeSourceTable::Relation
        #                 && smmBusRelTypeGroup::find(busRelTableOrig.BusRelTypeId).TableType != smmBusRelTypeSourceTable::Relation)
        #            {
        #                // Cannot change business relation of type customer/vendor.
        #                ret = checkFailed("@SYS121463");
        #            }
        #            break;
        #
        #            case fieldNum(smmBusRelTable, Blocked) :
        #                // payment is not a valid option for a business relation
        #                if (this.Blocked == CustVendorBlocked::Payment)
        #                {
        #                    ret = checkFailed(strFmt("@SYS137754", "@SYS316613"));
        #                }
        #                break;
        #        }
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #validateWrite
        #/// <summary>
        #///       Check if record is well-formed.
        #///
        #///    <list type="bullet">
        #///       <item>
        #///          <description>Customer/vendor relation must be ok.
        #///          </description>
        #///       </item>
        #///       <item>
        #///          <description>If customer account specified, CustGroup must be set.
        #///          </description>
        #///       </item>
        #///       <item>
        #///          <description>If vendor account specified, VendGroup must be set.
        #///          </description>
        #///       </item>
        #///       <item>
        #///          <description>Parent business relation cannot point to itself.
        #///          </description>
        #///       </item>
        #///    </list>
        #/// </summary>
        #/// <param name="validateWorkerOnly">
        #/// value of validateWorkerOnly
        #/// </param>
        #/// <returns>
        #///    True, if record ok.
        #/// </returns>
        #public boolean validateWrite(boolean validateWorkerOnly = false)
        #{
        #    boolean ret = true;
        #
        #    if (!validateWorkerOnly)
        #    {
        #        ret = super();
        #
        #        if (ret && (!this.BusRelAccount || !this.BusRelTypeId))
        #        {
        #            ret = false;
        #        }
        #    }
        #
        #    if (this.MainContactWorker)
        #    {
        #        ret = ret && smmUtility::isValidWorkerInCurrentCompany(this.MainContactWorker);
        #    }
        #
        #    return ret;
        #}
        #
      ENDSOURCE
      SOURCE #vendAccount
        #VendAccount vendAccount()
        #{
        #    ;
        #    return VendTable::findByPartyRecId(this.Party).AccountNum;
        #}
      ENDSOURCE
      SOURCE #checkNumbersequence
        #/// <summary>
        #/// Checks whether the number sequence is correct.
        #/// </summary>
        #/// <returns>
        #/// true, if number sequence ok; otherwise, false.
        #/// </returns>
        #/// <remarks>
        #/// For example, the number sequence cannot be normal.
        #/// </remarks>
        #public static boolean checkNumbersequence()
        #{
        #    NumberSequenceTable     numberseq;
        #    NumberSequenceReference numberSequenceReference;
        #    boolean                 ret = true;
        #    ;
        #
        #    select firstonly NumberSequenceId from numberSequenceReference where
        #        numberSequenceReference.NumberSequenceDatatype == NumberSequenceDatatype::findByDatatypeId(extendedTypeNum(smmBusRelAccount)).RecId;
        #
        #    if (numberSequenceReference)
        #    {
        #        numberseq = NumberSequenceTable::find(numberSequenceReference.NumberSequenceId);
        #
        #        if (numberseq)
        #        {
        #            if (numberseq.Manual)
        #            {
        #                // Business relation number sequence must not be manual
        #                ret = checkFailed("@SYS81360");
        #            }
        #        }
        #        else
        #        {
        #            // Number sequence on business relation is missing
        #            ret = checkFailed("@SYS81361");
        #        }
        #    }
        #
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #convert2Customer
        #/// <summary>
        #/// Converts a business relation to a type customer.
        #/// </summary>
        #/// <param name="_smmBusRelTable">
        #/// The record to convert.
        #/// </param>
        #/// <param name="custAccountNo">
        #/// The customer account number.
        #/// </param>
        #/// <param name="showCustAccountDialog">
        #/// A <c>Boolean</c> value that specifies whether to show a customer account dialog box; optional.
        #/// </param>
        #/// <returns>
        #/// A <c>NoYes</c> enumeration value that indicates whether the record was converted.
        #/// </returns>
        #/// <remarks>
        #/// This method finds the customer account by first using the number sequence setup. Second, the
        #/// business relation is converted to a customer. Finally, the values from the <c>CustAccount</c> table
        #/// are inserted to the new record. This method will throw an update exception if the update cannot be
        #/// performed.
        #/// </remarks>
        #public static server NoYes convert2Customer(smmBusRelTable _smmBusRelTable,CustAccount custAccountNo = '', boolean showCustAccountDialog = true)
        #{
        #    //Added two arguments in this method. ( custAccountNo & showCustAccountDialog)
        #    //The argument custAccountNo is used to input the custAccountNo incase this method is called from EP and
        #    //the NumberSequence is manual.
        #    //The argument showCustAccountDialog is to be used when called from EP so that CustAccount dialog is not shown
        #    //There is an alternate provision of entering the CustAccount in EP
        #
        #    #OCCRetryCount
        #    #define.blank('')
        #
        #    CustAccount      custAccount;
        #    smmBusRelTable   smmBusRelTable;
        #    CustTable        custTable;
        #    boolean          deleteAfterConversion;
        #
        #    // Is customer number sequence manual
        #    //Also checking for showCustAccountDialog so that the CustAccount dialog is not
        #    //shown when this variable is false.
        #    if (showCustAccountDialog && smmParameters::isNumberSequenceManual(extendedTypeNum(CustAccount)))
        #    {
        #        // Open form for input of customer account number
        #        custAccount = smmUtility::openAccountNumDialog(smmAccountNumToCreate::CustAccount);
        #
        #        // Exit function if no account number was specified
        #        if (!custAccount)
        #        {
        #            // Conversion to customer could not be completed
        #            error("@SYS81993");
        #
        #            return NoYes::No;
        #        }
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #    {
        #        // Prevent converting BR's that are flagged as deleted
        #        if(_smmBusRelTable.mcrIsListDeleted())
        #        {
        #            error("@MCR26182");
        #            return NoYes::No;
        #        }
        #    }
        #    try
        #    {
        #        ttsbegin;
        #
        #        if(!showCustAccountDialog && smmParameters::isNumberSequenceManual(extendedTypeNum(CustAccount)))
        #        {
        #            custAccount = custAccountNo;
        #        }
        #        // Convert the business relation to a customer
        #        custAccount = _smmBusRelTable.relation2Customer(_smmBusRelTable, custAccount);
        #
        #        if (custAccount)
        #        {
        #
        #            // Find the original business relation
        #            smmBusRelTable = smmBusRelTable::find(_smmBusRelTable.BusRelAccount,true);
        #
        #            if (smmBusRelTable)
        #            {
        #                MCRFullTextSearch::delete(smmBusRelTable);
        #
        #                // Find the customer
        #                custTable = CustTable::find(custAccount);
        #
        #                // Update references to new customer
        #                smmBusRelTable.updateReferences(custTable.TableId,custTable.RecId,custTable.DataAreaId,custTable.AccountNum);
        #
        #                // Store information for converted business relations
        #                smmBusRelTable.createConvertedBusRel(custTable.TableId,custTable.AccountNum);
        #
        #                smmBusRelTable.BusRelTypeId     = smmBusRelTypeGroup::getCustomerType();
        #                smmBusRelTable.VendGroup        = #blank;
        #
        #                deleteAfterConversion = smmBusRelTypeGroup::find(_smmBusRelTable.BusRelTypeId).DelBusRelTable;
        #
        #                if (deleteAfterConversion)
        #                {
        #                    // Delete business relations record
        #                    smmBusRelTable.delete();
        #                }
        #                else
        #                {
        #                    smmBusRelTable.update(false);
        #                }
        #                if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #                {
        #                    // Find and update all target lists
        #                    smmBusRelTable.mcrUpdateTargetLists(smmBusRelTable, custTable);
        #                }
        #            }
        #        }
        #
        #        ttscommit;
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #
        #    return NoYes::Yes;
        #}
      ENDSOURCE
      SOURCE #convert2Vendor
        #/// <summary>
        #/// Converts a business relation to a type vendor.
        #/// </summary>
        #/// <param name="_smmBusRelTable">
        #/// The record to convert.
        #/// </param>
        #/// <returns>
        #/// A <c>NoYes</c> enumeration value that indicates whether the record was converted.
        #/// </returns>
        #/// <remarks>
        #/// First the vendor account is found, based on the number sequence setup. Then, the business relation
        #/// is converted to vendor. Finally, the values from the <c>CustAccount</c> table are inserted into the
        #/// new record.This method might throw an update exception if the update cannot be performed.
        #/// </remarks>
        #public static server NoYes convert2Vendor(smmBusRelTable _smmBusRelTable)
        #{
        #    #OCCRetryCount
        #    #define.blank('')
        #
        #    VendAccount      vendAccount;
        #    smmBusRelTable   smmBusRelTable;
        #    VendTable        vendTable;
        #    boolean          deleteAfterConversion;
        #    ;
        #    if (!_smmBusRelTable)
        #    {
        #        return NoYes::No;
        #    }
        #
        #    vendAccount = #blank;
        #
        #    if (smmParameters::isNumberSequenceManual(extendedTypeNum(VendAccount)))
        #    {
        #        vendAccount = smmUtility::openAccountNumDialog(smmAccountNumToCreate::VendAccount);
        #
        #        if (!vendAccount)
        #        {
        #            // Conversion to vendor could not be completed
        #            error("@SYS81995");
        #
        #            return NoYes::No;
        #        }
        #    }
        #
        #    if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        #    {
        #        // Prevent converting BR's that are flagged as deleted
        #        if(_smmBusRelTable.mcrIsListDeleted())
        #        {
        #            error("@MCR26182");
        #            return NoYes::No;
        #        }
        #    }
        #    try
        #    {
        #        ttsbegin;
        #
        #        // Convert the business relation to a vendor
        #        vendAccount = _smmBusRelTable.relation2Vendor(_smmBusRelTable, vendAccount);
        #
        #        if (vendAccount)
        #        {
        #            // Find the original business relation
        #            smmBusRelTable = smmBusRelTable::find(_smmBusRelTable.BusRelAccount,true);
        #
        #            if (smmBusRelTable)
        #            {
        #                // Delete the search text as we don't use full text search for vendors
        #                MCRFullTextSearch::delete(smmBusRelTable);
        #
        #                // Find the vendor
        #                vendTable = VendTable::find(vendAccount);
        #
        #                // Update references to new vendor
        #                smmBusRelTable.updateReferences(vendTable.TableId,vendTable.RecId,vendTable.DataAreaId,vendTable.AccountNum);
        #
        #                // Store information for converted prospect
        #                smmBusRelTable.createConvertedBusRel(vendTable.TableId,vendTable.AccountNum);
        #
        #                smmBusRelTable.BusRelTypeId     = smmBusRelTypeGroup::getVendorType();
        #                smmBusRelTable.CustGroup        = #blank;
        #
        #                deleteAfterConversion = smmBusRelTypeGroup::find(_smmBusRelTable.BusRelTypeId).DelBusRelTable;
        #
        #                if (deleteAfterConversion)
        #                {
        #                    // Delete business relations record
        #                    smmBusRelTable.delete();
        #                }
        #                else
        #                {
        #                    smmBusRelTable.update(false);
        #                }
        #            }
        #        }
        #
        #
        #        ttscommit;
        #    }
        #    catch (Exception::Deadlock)
        #    {
        #        retry;
        #    }
        #    catch (Exception::UpdateConflict)
        #    {
        #        if (appl.ttsLevel() == 0)
        #        {
        #            if (xSession::currentRetryCount() >= #RetryNum)
        #            {
        #                throw Exception::UpdateConflictNotRecovered;
        #            }
        #            else
        #            {
        #                retry;
        #            }
        #        }
        #        else
        #        {
        #            throw Exception::UpdateConflict;
        #        }
        #    }
        #
        #    return NoYes::Yes;
        #}
      ENDSOURCE
      SOURCE #deleteFromCustVend
        #// Delete business relation from customer/vendor
        #static void deleteFromCustVend(TableId _tableId, DirPartyRecId _partyRecId)
        #{
        #    smmBusRelTable  busRelTable;
        #    smmBusRelTypeId busRelTypeId;
        #    ;
        #    switch (_tableId)
        #    {
        #        case tableNum(CustTable) :
        #        busRelTypeId = smmBusRelTypeGroup::getCustomerType();
        #        break;
        #
        #        case tableNum(VendTable) :
        #        busRelTypeId = smmBusRelTypeGroup::getVendorType();
        #        break;
        #    }
        #    if (busRelTypeId)
        #    {
        #        ttsbegin;
        #        busRelTable = smmBusRelTable::findByParty(_partyRecId, true);
        #        if (busRelTable && busRelTable.BusRelTypeId == busRelTypeId)
        #        {
        #            if (busRelTable.validateDelete())
        #            {
        #                busRelTable.delete();
        #            }
        #            else
        #            {
        #                throw Exception::Error;
        #            }
        #        }
        #        ttscommit;
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #enableConversionToCustomer
        #//Called from EP to enable/disable the option for coversion of the business relation to a customer
        #public static boolean enableConversionToCustomer(smmBusRelTable _smmBusRelTable)
        #{
        #    boolean                 flag = false;
        #    smmBusRelTypeGroup      busRelTypeGroup = smmBusRelTypeGroup::find(_smmBusRelTable.BusRelTypeId);
        #    ;
        #
        #    // Allow conversion to customer if not already a customer/vendor
        #    flag = _smmBusRelTable &&  (busRelTypeGroup.TableType != smmBusRelTypeSourceTable::Vendor) && !DirPartyTable::isCustomer(_smmBusRelTable.Party);
        #    return flag;
        #}
      ENDSOURCE
      SOURCE #exist
        #/// <summary>
        #/// Checks whether a business relation exists.
        #/// </summary>
        #/// <param name="_smmBusRelAccount">
        #/// The business relation account to check.
        #/// </param>
        #/// <returns>
        #/// true if relation exists; otherwise, false.
        #/// </returns>
        #public static boolean exist(smmBusRelAccount _smmBusRelAccount)
        #{;
        #    return _smmBusRelAccount && (select firstonly smmBusRelTable index hint AccountIdx where smmBusRelTable.BusRelAccount == _smmBusRelAccount).RecId != 0;
        #}
        #
      ENDSOURCE
      SOURCE #find
        #/// <summary>
        #/// Finds the business relation by using the specified business relation account number.
        #/// </summary>
        #/// <param name="_busRelAccount">
        #/// The business relation account.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that specifies whether to modify the record.
        #/// </param>
        #/// <returns>
        #/// The business relation.
        #/// </returns>
        #public static smmBusRelTable find(smmBusRelAccount _busRelAccount, boolean _forupdate = false)
        #{
        #    smmBusRelTable smmBusRelTable = null;
        #    ;
        #
        #    if (_busRelAccount)
        #    {
        #        smmBusRelTable.selectForUpdate(_forupdate);
        #
        #        select firstonly smmBusRelTable where smmBusRelTable.BusRelAccount == _busRelAccount;
        #    }
        #
        #    return smmBusRelTable;
        #}
      ENDSOURCE
      SOURCE #findByParty
        #/// <summary>
        #/// Retrieves the business relation record from the party record ID.
        #/// </summary>
        #/// <param name="_partyRecId">
        #/// The party record ID for this business relation.
        #/// </param>
        #/// <param name="_forUpdate">
        #/// A Boolean value that specifies whether to select the business relation entity for update.
        #/// </param>
        #/// <returns>
        #/// The business relation entity whose party has the passed record ID.
        #/// </returns>
        #static smmBusRelTable findByParty(DirPartyRecId _partyRecId,
        #                                    boolean _forUpdate = false)
        #{
        #    smmBusRelTable smmBusRelTable;
        #    ;
        #
        #    if (_partyRecId)
        #    {
        #        if (_forUpdate)
        #            smmBusRelTable.selectForUpdate(_forUpdate);
        #
        #        select firstonly smmBusRelTable
        #            where smmBusRelTable.Party == _partyRecId;
        #    }
        #    return smmBusRelTable;
        #}
      ENDSOURCE
      SOURCE #findCust
        #/// <summary>
        #/// Finds the business relation from a customer account number.
        #/// </summary>
        #/// <param name="_custAccount">
        #/// The customer account.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that specifies whether to modify the record.
        #/// </param>
        #/// <returns>
        #/// The business relation.
        #/// </returns>
        #public static smmBusRelTable findCust(CustAccount _custAccount, boolean _forupdate = false)
        #{
        #    smmBusRelTable  smmBusRelTable;
        #    CustTable       custTable;
        #    ;
        #
        #    if (_custAccount)
        #    {
        #        smmBusRelTable.selectForUpdate(_forupdate);
        #
        #        select firstonly smmBusRelTable join RecId from custTable
        #            where smmBusRelTable.Party == custTable.Party &&
        #                    custTable.AccountNum == _custAccount;
        #    }
        #
        #    return smmBusRelTable;
        #}
      ENDSOURCE
      SOURCE #findIncomingCaller
        #/// <summary>
        #/// Finds the business relation by using the specified telephone number and checks both the telephone
        #/// number and mobile phone number.
        #/// </summary>
        #/// <param name="_phoneNumber">
        #/// The telephone number to find in the business relation table.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that specifies whether to modify the record.
        #/// </param>
        #/// <returns>
        #/// The business relation record
        #/// </returns>
        #public static server smmBusRelTable findIncomingCaller(Phone _phoneNumber, boolean _forupdate = false)
        #{
        #    DirPartyLocation        partyLocation;
        #    LogisticsElectronicAddress electronicAddress;
        #    smmBusRelTable          smmBusRelTable = null;
        #    ;
        #
        #    if (_phoneNumber)
        #    {
        #
        #        select RecId from electronicAddress
        #                where electronicAddress.Locator == _phoneNumber &&
        #                electronicAddress.Type == LogisticsElectronicAddressMethodType::Phone
        #            exists join partyLocation
        #                where partyLocation.Location == electronicAddress.Location &&
        #                partyLocation.IsPrimary == NoYes::Yes &&
        #                partyLocation.IsPostalAddress == NoYes::No
        #        exists join smmBusRelTable
        #                where smmBusRelTable.Party == partyLocation.Party;
        #        smmBusRelTable.selectForUpdate(_forupdate);
        #
        #    }
        #    return smmBusRelTable;
        #}
      ENDSOURCE
      SOURCE #findRec
        #/// <summary>
        #/// Finds the business relation by using the specified record ID.
        #/// </summary>
        #/// <param name="_recId">
        #/// The record ID.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that specifies whether to modify the record.
        #/// </param>
        #/// <returns>
        #/// The business relation.
        #/// </returns>
        #public static smmBusRelTable findRec(RecId _recId, boolean _forupdate = false)
        #{
        #    smmBusRelTable smmBusRelTable = null;
        #    ;
        #
        #    if (_recId)
        #    {
        #        smmBusRelTable.selectForUpdate(_forupdate);
        #
        #        select firstonly smmBusRelTable where smmBusRelTable.RecId == _recId;
        #    }
        #
        #    return smmBusRelTable;
        #}
      ENDSOURCE
      SOURCE #findVend
        #/// <summary>
        #/// Find business relation by using the specified a vendor account.
        #/// </summary>
        #/// <param name="_vendAccount">
        #/// The vendor account.
        #/// </param>
        #/// <param name="_forupdate">
        #/// A Boolean value that specifies whether to modify the record.
        #/// </param>
        #/// <returns>
        #/// The business relation.
        #/// </returns>
        #public static smmBusRelTable findVend(VendAccount _vendAccount, boolean _forupdate = false)
        #{
        #    smmBusRelTable  smmBusRelTable;
        #    VendTable       vendTable;
        #    ;
        #
        #    if (_vendAccount)
        #    {
        #        smmBusRelTable.selectForUpdate(_forupdate);
        #
        #        select firstonly smmBusRelTable join RecId from vendTable
        #            where smmBusRelTable.Party == vendTable.Party &&
        #                  vendTable.AccountNum == _vendAccount;
        #    }
        #
        #    return smmBusRelTable;
        #}
      ENDSOURCE
      SOURCE #getNumberSeqFormHandler
        #/// <summary>
        #/// Retrieves the number sequence form handler that can be used in the form creation of this entity to
        #/// generate the number sequence related field.
        #/// </summary>
        #/// <param name="callerForm">
        #/// The form that will be using the number sequence form handler to create the entity.
        #/// </param>
        #/// <param name="numberSequenceDatasource">
        #/// The data source that contains the entity on the creation form.
        #/// </param>
        #/// <returns>
        #/// The number sequence form handler that can be used in the form creation of the entity.
        #/// </returns>
        #public static NumberSeqFormHandler getNumberSeqFormHandler(ObjectRun callerForm, FormDataSource numberSequenceDatasource)
        #{
        #    NumberSeqFormHandler numberSeqFormHandler;
        #    if (!numberSeqFormHandler)
        #    {
        #        numberSeqFormHandler = NumberSeqFormHandler::newForm(smmParameters::numRefBusRelAccount().NumberSequenceId,
        #                                                             callerForm,
        #                                                             numberSequenceDatasource,
        #                                                             fieldNum(smmBusRelTable, BusRelAccount)
        #                                                            );
        #    }
        #    return numberSeqFormHandler;
        #}
      ENDSOURCE
      SOURCE #mcrExistList
        #/// <summary>
        #/// Checks if a BR exists based of the past list Id.
        #/// </summary>
        #/// <param name="_mcrSmmListId">
        #/// The list ID of the <c>smmBusRelTable</c> record to select.
        #/// </param>
        #/// <returns>
        #/// true if a BR exists based of the past list Id; otherwise, false.
        #/// </returns>
        #public static boolean mcrExistList(MCRSmmListId _mcrSmmListId)
        #{
        #    smmBusRelTable      smmBusRelTable;
        #    MCRsmmBusRelTable   mcrsmmBusRelTable;
        #
        #    if (_mcrSmmListId)
        #    {
        #        select firstonly RecId from smmBusRelTable
        #        exists join mcrsmmBusRelTable
        #            where mcrsmmBusRelTable.smmBusRelTable == smmBusRelTable.RecId
        #            && mcrsmmBusRelTable.ListId == _mcrSmmListId;
        #
        #        if (smmBusRelTable)
        #        {
        #            return true;
        #        }
        #    }
        #
        #    return false;
        #}
      ENDSOURCE
      SOURCE #mcrOpenCustTable
        #/// <summary>
        #/// Opens the customer maintenance form.
        #/// </summary>
        #/// <param name="_smmBusRelTable">
        #/// A record in the <c>smmBusRelTable</c> table.
        #/// </param>
        #/// <param name="_useParam">
        #/// Whether or not to open the form.
        #/// </param>
        #/// <remarks>
        #/// Moved from the conversion button that is on the BR form.
        #/// Re-structed to use formRun rather then a menufunction object because need
        #/// to call formRun.wait() so the system waits for the custtable form to be closed
        #/// when converting relation to cust from the campaign form.  Need it to work
        #/// this way because another form gets called aftewards and don't want the 2 forms
        #/// popping at the same time.
        #/// </remarks>
        #public static void mcrOpenCustTable(smmBusRelTable _smmBusRelTable, boolean _useParam = true)
        #{
        #
        #    // Open the Customer table form if configured to do so
        #    if (_useParam && smmParameters::getBusRelOpenCustForm())
        #    {
        #       smmBusRelTable::mcrRunCustTable(_smmBusRelTable);
        #    }
        #}
      ENDSOURCE
      SOURCE #mcrRunCustTable
        #/// <summary>
        #/// Opens the <c>CustTable</c> form for the passed <c>smmBusRelTable</c> record.
        #/// </summary>
        #/// <param name="_smmBusRelTable">
        #/// The <c>smmBusRelTable</c> record for which this method opens the <c>CustTable</c> form.
        #/// </param>
        #private static void mcrRunCustTable(smmBusRelTable _smmBusRelTable)
        #{
        #    Args           args = new Args();
        #    formRun        menuFunction;
        #
        #    args.record(_smmBusRelTable);
        #    menuFunction = new MenuFunction(menuitemDisplayStr(CustTable), MenuItemType::Display).create(args);
        #    menuFunction.init();
        #    menuFunction.run();
        #    menuFunction.wait();
        #}
      ENDSOURCE
      SOURCE #quickCreateSaveAndOpenLinks
        #private static container quickCreateSaveAndOpenLinks()
        #{
        #    container saveAndOpenLinks;
        #    saveAndOpenLinks += [menuitemDisplayStr(smmBusRelTableEdit), MenuItemType::Display];
        #    saveAndOpenLinks += [menuitemDisplayStr(SalesQuotationTableForNewFromBusRel), MenuItemType::Display];
        #    saveAndOpenLinks += [menuitemDisplayStr(SalesQuotationProjTableForNew), MenuItemType::Display];
        #    saveAndOpenLinks += [menuitemDisplayStr(smmLeadTableNew), MenuItemType::Display];
        #    saveAndOpenLinks += [menuitemDisplayStr(smmOpportunityTableNew), MenuItemType::Display];
        #    return saveAndOpenLinks;
        #}
      ENDSOURCE
      SOURCE #retreiveQuickCreateSettings
        #/// <summary>
        #/// Retrieves the metadata that is required for the quick create form.
        #/// </summary>
        #/// <returns>
        #/// A container that contains the metadata that is required for the quick create form.
        #/// </returns>
        #public static container retreiveQuickCreateSettings()
        #{
        #    container quickCreateSettings;
        #    quickCreateSettings += [smmBusRelTable::quickCreateSaveAndOpenLinks()];
        #    return quickCreateSettings;
        #}
      ENDSOURCE
      SOURCE #showTree
        #client static void showTree(container con,FormTreeControl _fromTreeControl)
        #{
        #    int i;
        #    smmBusRelAccount    busRelAccount;
        #    smmBusRelName       name;
        #    boolean             isParent;
        #    int                 parentIdx;
        #    int                 nodeId;
        #    ImageRes            imageRes    = 0;
        #    RecId               busRelRecId;
        #    RecId               parentRecId;
        #    Map                 treeRecId;
        #    ;
        #
        #    treeRecId = new Map(typeName2Type(extendedTypeStr(RecId)),Types::Integer);
        #
        #    // Clear all items in tree
        #    _fromTreeControl.deleteAll();
        #
        #    for (i=1;i<=conLen(con);i++)
        #    {
        #        busRelAccount   = conPeek(conPeek(con,i),1);
        #        name            = conPeek(conPeek(con,i),2);
        #        isParent        = conPeek(conPeek(con,i),3);
        #        busRelRecId     = conPeek(conPeek(con,i),4);
        #        parentRecId     = conPeek(conPeek(con,i),5);
        #
        #        if (busRelRecId)
        #        {
        #            parentIdx = _fromTreeControl.getItem(treeRecId.lookup(busRelRecId)).idx();
        #        }
        #        else
        #        {
        #            parentIdx = 0;
        #        }
        #
        #        // %1, %2
        #        nodeId = SysFormTreeControl::addTreeItem(_fromTreeControl, busRelAccount + ', ' + name, parentIdx, busRelAccount, imageRes,isParent);
        #        treeRecId.insert(parentRecId,nodeId);
        #    }
        #
        #}
      ENDSOURCE
      SOURCE #transferDocuments
        #private server static void transferDocuments(TableId _busRelTableId,RecId _busRelRecId,DataAreaId _busRelDataAreaId,
        #                                             TableId _custVendTableId, RecId _custVendRecId, DataAreaId _custVendDataAreaId)
        #{
        #    DocuRef         docuRef;
        #    ;
        #
        #    ttsbegin;
        #
        #    if (_busRelTableId && _busRelRecId && _busRelDataAreaId &&
        #        _custVendTableId && _custVendRecId && _custVendDataAreaId)
        #    {
        #        while select forupdate docuRef
        #            where docuRef.RefCompanyId  == _busRelDataAreaId &&
        #                  docuRef.RefRecId      == _busRelRecId &&
        #                  docuRef.RefTableId    == _busRelTableId
        #        {
        #            docuRef.RefRecId     = _custVendRecId;
        #            docuRef.RefTableId   = _custVendTableId;
        #            docuRef.RefCompanyId = _custVendDataAreaId;
        #            docuRef.update();
        #        }
        #    }
        #
        #    ttscommit;
        #}
      ENDSOURCE
      SOURCE #updateFromCustTableSFA2
        #/// <summary>
        #/// Makes sure that the business relation table is updated with the correct information.
        #/// </summary>
        #/// <param name="_custTable">
        #/// The customer table record.
        #/// </param>
        #/// <param name="_custType">
        #/// The customer type.
        #/// </param>
        #/// <param name="_checkNumberSequence">
        #/// The check number sequence.
        #/// </param>
        #/// <param name="_checkLicense">
        #/// The check license.
        #/// </param>
        #/// <param name="_insertLicense">
        #/// The insert license.
        #/// </param>
        #/// <param name="_updateLicense">
        #/// The update license.
        #/// </param>
        #/// <param name="_smmBusRelTable">
        #/// The record to update.
        #/// </param>
        #// When a change is made directly in CustTable, either as an insert or an update,
        #// this method is called to ensure that the business relation table is updated with
        #// the correct information
        #public server static void updateFromCustTableSFA2(CustTable         _custTable,
        #                                                  smmBusRelTypeId   _custType               = '',
        #                                                  boolean           _checkNumberSequence    = true,
        #                                                  boolean           _checkLicense           = true,
        #                                                  boolean           _insertLicense          = false,
        #                                                  boolean           _updateLicense          = false,
        #                                                  smmBusRelTable    _smmBusRelTable         = null)
        #{
        #    SmmUpdateBusRel     smmUpdateBusRel = SmmUpdateBusRel::construct();
        #    ;
        #
        #    smmUpdateBusRel.parmTypeId(_custType);
        #    smmUpdateBusRel.parmCheckNumberSequence(_checkNumberSequence);
        #    smmUpdateBusRel.parmCheckLicense(_checkLicense);
        #    smmUpdateBusRel.parmInsertLicense(_insertLicense);
        #    smmUpdateBusRel.parmUpdateLicense(_updateLicense);
        #
        #    if (!smmUpdateBusRel.init(tableNum(CustTable)))
        #    {
        #        return;
        #    }
        #
        #    smmUpdateBusRel.updateFromCustTableSFA2(_custTable, _smmBusRelTable);
        #}
      ENDSOURCE
      SOURCE #updateFromVendTableSFA2
        #/// <summary>
        #/// Makes sure that the business relation table is updated with the correct information.
        #/// </summary>
        #/// <param name="_vendTable">
        #/// A vendor table record.
        #/// </param>
        #/// <param name="_vendType">
        #/// The vendor type.
        #/// </param>
        #/// <param name="_checkNumberSequence">
        #/// A Boolean value that specifies whether to check the number sequence.
        #/// </param>
        #/// <param name="_checkLicense">
        #/// A Boolean value that specifies whether to check the license.
        #/// </param>
        #/// <param name="_insertLicense">
        #/// A Boolean value that specifies whether to insert the license.
        #/// </param>
        #/// <param name="_updateLicense">
        #/// A Boolean value that specifies whether to update the license.
        #/// </param>
        #/// <param name="_smmBusRelTable">
        #/// The record update.
        #/// </param>
        #// When a change is made directly in VendTable, either as an insert or an update,
        #// this method is called to ensure that the business relation table is updated with
        #// the correct information
        #public server static void updateFromVendTableSFA2(VendTable         _vendTable,
        #                                                  smmBusRelTypeId   _vendType            = '',
        #                                                  boolean           _checkNumberSequence = true,
        #                                                  boolean           _checkLicense        = true,
        #                                                  boolean           _insertLicense       = false,
        #                                                  boolean           _updateLicense       = false,
        #                                                  smmBusRelTable    _smmBusRelTable      = null)
        #{
        #    SmmUpdateBusRel     smmUpdateBusRel = SmmUpdateBusRel::construct();
        #;
        #    smmUpdateBusRel.parmTypeId(_vendType);
        #    smmUpdateBusRel.parmCheckNumberSequence(_checkNumberSequence);
        #    smmUpdateBusRel.parmCheckLicense(_checkLicense);
        #    smmUpdateBusRel.parmInsertLicense(_insertLicense);
        #    smmUpdateBusRel.parmUpdateLicense(_updateLicense);
        #
        #    if (!smmUpdateBusRel.init(tableNum(VendTable)))
        #    {
        #        return;
        #    }
        #
        #    smmUpdateBusRel.updateFromVendTableSFA2(_vendTable, _smmBusRelTable);
        #}
      ENDSOURCE
    ENDMETHODS
  ENDTABLE
  

***Element: END
